import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as i,c,a as n,b as s,d as e,f as t}from"./app-c7f7d3aa.js";const l="/blog/assets/14-01-6e5b0300.webp",r={},d=t(`<h2 id="自动加载" tabindex="-1"><a class="header-anchor" href="#自动加载" aria-hidden="true">#</a> 自动加载</h2><p><code>autoloader.php</code></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token function">spl_autoload_register</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$class</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 类前缀: 通常是包名称, thinkphp, think</span>
    <span class="token variable">$prefix</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;think\\\\&#39;</span><span class="token punctuation">;</span>

    <span class="token comment">// 类文件约定统一保存到一个固定目录下: src</span>
    <span class="token variable">$baseDir</span> <span class="token operator">=</span> <span class="token constant">__DIR__</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;/src/&#39;</span><span class="token punctuation">;</span>

    <span class="token comment">// 去掉包前缀,获取真实的类名称</span>
    <span class="token variable">$realCalss</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$class</span><span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$prefix</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// think\\admin\\model\\User , 真实类名: admin\\model\\User</span>
    <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;\\\\&#39;</span><span class="token punctuation">,</span> <span class="token constant">DIRECTORY_SEPARATOR</span><span class="token punctuation">,</span>  <span class="token variable">$realCalss</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token variable">$baseDir</span> <span class="token operator">.</span> <span class="token variable">$file</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;.php&#39;</span><span class="token punctuation">;</span>
    <span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token keyword">require</span> <span class="token variable">$file</span> <span class="token punctuation">:</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;文件不存在&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>\\src\\admin\\model\\User.php</code></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">namespace</span> <span class="token package">think<span class="token punctuation">\\</span>admin<span class="token punctuation">\\</span>model</span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">User</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function-definition function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string single-quoted-string">&#39;当前类方法: &#39;</span> <span class="token operator">.</span> <span class="token constant">__METHOD__</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>demo.php</code></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">require</span> <span class="token constant">__DIR__</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;/autoloader.php&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">think<span class="token punctuation">\\</span>admin<span class="token punctuation">\\</span>model<span class="token punctuation">\\</span>User</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;&lt;br&gt;&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// 完整类名 ::class</span>
<span class="token keyword">echo</span> <span class="token string single-quoted-string">&#39;完整类名: &#39;</span> <span class="token operator">.</span> <span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>当前类方法: <code>think\\admin\\model\\User::index</code><br> 完整类名: <code>think\\admin\\model\\User</code></p></blockquote><h2 id="使用composer" tabindex="-1"><a class="header-anchor" href="#使用composer" aria-hidden="true">#</a> 使用Composer</h2>`,9),u={href:"https://getcomposer.org/",target:"_blank",rel:"noopener noreferrer"},k=n("br",null,null,-1),v={href:"https://www.phpcomposer.com/",target:"_blank",rel:"noopener noreferrer"},g=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">composer</span> init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h2 id="编写测试文件" tabindex="-1"><a class="header-anchor" href="#编写测试文件" aria-hidden="true">#</a> 编写测试文件</h2><p><code>lib/Test1.php</code></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// PSR_4: 命名空间与类文件所在路径进行映射</span>
<span class="token keyword">namespace</span> <span class="token package">ns3</span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">Test1Class</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function-definition function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string single-quoted-string">&#39;当前类名: &#39;</span> <span class="token operator">.</span> <span class="token constant">__CLASS__</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>lib/Test2.php</code></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">namespace</span> <span class="token package">ns4</span><span class="token punctuation">;</span>
<span class="token comment">// 除命名空间外其余和Test1相同</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>src/Test1.php</code></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">namespace</span> <span class="token package">ns1</span><span class="token punctuation">;</span>
<span class="token comment">// 除命名空间外其余和Test1相同</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>src/Test2.php</code></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">namespace</span> <span class="token package">ns2</span><span class="token punctuation">;</span>
<span class="token comment">// 除命名空间外其余和Test1相同</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="测试" tabindex="-1"><a class="header-anchor" href="#测试" aria-hidden="true">#</a> 测试</h3><p>在根目录下创建<code>demo.php</code></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">//测试</span>
<span class="token keyword">namespace</span> <span class="token package">php_edu</span><span class="token punctuation">;</span>

<span class="token keyword">require</span> <span class="token constant">__DIR__</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;/src/Test1.php&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">require</span> <span class="token constant">__DIR__</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;/src/Test2.php&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">require</span> <span class="token constant">__DIR__</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;/lib/Test1.php&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">require</span> <span class="token constant">__DIR__</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;/lib/Test2.php&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>ns1<span class="token punctuation">\\</span>Test1Class</span><span class="token operator">::</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;&lt;br&gt;&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>ns2<span class="token punctuation">\\</span>Test2Class</span><span class="token operator">::</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;&lt;br&gt;&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>ns3<span class="token punctuation">\\</span>Test1Class</span><span class="token operator">::</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;&lt;br&gt;&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>ns4<span class="token punctuation">\\</span>Test2Class</span><span class="token operator">::</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;&lt;br&gt;&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="使用composer的自动加载器" tabindex="-1"><a class="header-anchor" href="#使用composer的自动加载器" aria-hidden="true">#</a> 使用composer的自动加载器</h4><p><code>composer.json</code> 添加类映射文件夹名</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>    <span class="token property">&quot;autoload&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;classmap&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;lib/&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;src&quot;</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">composer</span> dump-autoload
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="执行成功以后会自动将类文件映射" tabindex="-1"><a class="header-anchor" href="#执行成功以后会自动将类文件映射" aria-hidden="true">#</a> 执行成功以后会自动将类文件映射</h2><h2 id="配置文件映射" tabindex="-1"><a class="header-anchor" href="#配置文件映射" aria-hidden="true">#</a> 配置文件映射</h2><p><code>func/helper.php</code></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">function</span> <span class="token function-definition function">dump</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">void</span>
<span class="token punctuation">{</span>
    <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>config/database.php</code></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">const</span> <span class="token constant">DB</span><span class="token operator">=</span><span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;type&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;mysql&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;host&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;127.0.0.1&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;port&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;3306&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;user&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;root&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;password&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;root&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;dbname&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;test&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;charset&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;utf8&#39;</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>composer.json</code></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>    <span class="token property">&quot;autoload&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;files&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;config/database.php&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;func/helper.php&quot;</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="测试-1" tabindex="-1"><a class="header-anchor" href="#测试-1" aria-hidden="true">#</a> 测试</h3><p>再次执行命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">composer</span> dump-autoload
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>demo.php</code></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">echo</span> <span class="token constant">DB</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;host&#39;</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;&lt;br&gt;&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span> <span class="token function">dump</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;id&#39;</span> <span class="token operator">=&gt;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;root&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;&lt;br&gt;&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>127.0.0.1</code><br><code>array(2) { [&quot;id&quot;]=&gt; int(1) [&quot;name&quot;]=&gt; string(4) &quot;root&quot; }</code></p></blockquote><h2 id="使用psr-4测试" tabindex="-1"><a class="header-anchor" href="#使用psr-4测试" aria-hidden="true">#</a> 使用PSR-4测试</h2><blockquote><p>PSR-4： 类的命名空间与类文件路径相同</p></blockquote><p><code>admin/controller/User1.php</code></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">namespace</span> <span class="token package">admin<span class="token punctuation">\\</span>controller</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">User1</span><span class="token punctuation">{</span>
    <span class="token comment">// 打印当前类名</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function-definition function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string single-quoted-string">&#39;当前类名是：&#39;</span><span class="token operator">.</span><span class="token constant">__CLASS__</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>composer.json</code></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>    <span class="token property">&quot;autoload&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;psr-4&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;admin\\\\&quot;</span><span class="token operator">:</span> <span class="token string">&quot;admin/&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="测试-2" tabindex="-1"><a class="header-anchor" href="#测试-2" aria-hidden="true">#</a> 测试</h3><p>执行<code>composer dump-autoload</code></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">echo</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>admin<span class="token punctuation">\\</span>controller<span class="token punctuation">\\</span>User1</span><span class="token operator">::</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;&lt;br&gt;&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><p><img src="`+l+`" alt="img.png" loading="lazy"></p><h2 id="第三方包" tabindex="-1"><a class="header-anchor" href="#第三方包" aria-hidden="true">#</a> 第三方包</h2><h3 id="composer切换阿里源" tabindex="-1"><a class="header-anchor" href="#composer切换阿里源" aria-hidden="true">#</a> composer切换阿里源</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">composer</span> config <span class="token parameter variable">-g</span> repo.packagist <span class="token function">composer</span> https://mirrors.aliyun.com/composer/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,47),m={href:"https://packagist.org/",target:"_blank",rel:"noopener noreferrer"},b=n("h3",{id:"验证码",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#验证码","aria-hidden":"true"},"#"),s(" 验证码")],-1),h={href:"https://packagist.org/packages/youngyezi/captcha",target:"_blank",rel:"noopener noreferrer"},q=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">composer</span> require youngyezi/captcha
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="使用medoo数据库" tabindex="-1"><a class="header-anchor" href="#使用medoo数据库" aria-hidden="true">#</a> 使用Medoo数据库</h3>`,2),f={href:"https://medoo.lvtao.net/index.php",target:"_blank",rel:"noopener noreferrer"},_=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">composer</span> require catfan/Medoo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Medoo<span class="token punctuation">\\</span>Medoo</span><span class="token punctuation">;</span>

<span class="token comment">// Connect the database.</span>
<span class="token variable">$database</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Medoo</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;type&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;mysql&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;host&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;localhost&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;database&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;phpedu&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;username&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;root&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;password&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;root&#39;</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$data</span> <span class="token operator">=</span> <span class="token variable">$database</span><span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;staff&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;email&#39;</span>
<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;id[&gt;]&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">35</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;&lt;pre&gt;%s&lt;/pre&gt;&#39;</span><span class="token punctuation">,</span> <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function y(w,x){const a=o("ExternalLinkIcon");return i(),c("div",null,[d,n("p",null,[n("a",u,[s("Composer (getcomposer.org)"),e(a)]),k,n("a",v,[s("Composer 中文网 / Packagist 中国全量镜像 (phpcomposer.com)"),e(a)])]),g,n("p",null,[n("a",m,[s("第三方包查询网站packagist"),e(a)])]),b,n("p",null,[n("a",h,[s("youngyezi/captcha - Packagist"),e(a)])]),q,n("p",null,[n("a",f,[s("Medoo - 高效的轻量级PHP数据库框架 (lvtao.net)"),e(a)])]),_])}const C=p(r,[["render",y],["__file","14Composer与常规操作.html.vue"]]);export{C as default};
