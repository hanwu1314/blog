const e=JSON.parse('{"key":"v-0e13cedc","path":"/frontEnd/vue3/%E9%98%B6%E6%AE%B5%E4%BA%8C/03%E6%8F%92%E6%A7%BD%E9%9D%9E%E7%88%B6%E5%AD%90%E9%80%9A%E4%BF%A1.html","title":"插槽_非父子通信","lang":"zh-CN","frontmatter":{"title":"插槽_非父子通信","icon":"bijiben","category":"vue","order":3,"description":"认识插槽Slot 在开发中，我们会经常封装一个个可复用的组件： 前面我们会通过props传递给组件一些数据，让组件来进行展示； 但是为了让这个组件具备更强的通用性，我们不能将组件中的内容限制为固定的div、span等等这些元素； 比如某种情况下我们使用组件，希望组件显示的是一个按钮，某种情况下我们使用组件希望显示的是一张图片； 我们应该让使用者可以决定某一块区域到底存放什么内容和元素；","head":[["meta",{"property":"og:url","content":"https://ycyang.site/blog/frontEnd/vue3/%E9%98%B6%E6%AE%B5%E4%BA%8C/03%E6%8F%92%E6%A7%BD%E9%9D%9E%E7%88%B6%E5%AD%90%E9%80%9A%E4%BF%A1.html"}],["meta",{"property":"og:site_name","content":"寒舞知识宝库"}],["meta",{"property":"og:title","content":"插槽_非父子通信"}],["meta",{"property":"og:description","content":"认识插槽Slot 在开发中，我们会经常封装一个个可复用的组件： 前面我们会通过props传递给组件一些数据，让组件来进行展示； 但是为了让这个组件具备更强的通用性，我们不能将组件中的内容限制为固定的div、span等等这些元素； 比如某种情况下我们使用组件，希望组件显示的是一个按钮，某种情况下我们使用组件希望显示的是一张图片； 我们应该让使用者可以决定某一块区域到底存放什么内容和元素；"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-28T09:38:25.000Z"}],["meta",{"property":"article:author","content":"Mr.DanceCold"}],["meta",{"property":"article:modified_time","content":"2023-08-28T09:38:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"插槽_非父子通信\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-08-28T09:38:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.DanceCold\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"认识插槽Slot","slug":"认识插槽slot","link":"#认识插槽slot","children":[]},{"level":2,"title":"如何使用插槽slot？","slug":"如何使用插槽slot","link":"#如何使用插槽slot","children":[]},{"level":2,"title":"插槽的基本使用","slug":"插槽的基本使用","link":"#插槽的基本使用","children":[{"level":3,"title":"具名插槽","slug":"具名插槽","link":"#具名插槽","children":[]},{"level":3,"title":"动态插槽","slug":"动态插槽","link":"#动态插槽","children":[]},{"level":3,"title":"插槽简写","slug":"插槽简写","link":"#插槽简写","children":[]},{"level":3,"title":"渲染作用域的概念","slug":"渲染作用域的概念","link":"#渲染作用域的概念","children":[]},{"level":3,"title":"作用域插槽","slug":"作用域插槽","link":"#作用域插槽","children":[]}]},{"level":2,"title":"Peovied和Inject","slug":"peovied和inject","link":"#peovied和inject","children":[{"level":3,"title":"非父子组件通信","slug":"非父子组件通信","link":"#非父子组件通信","children":[]},{"level":3,"title":"ts下使用mitt","slug":"ts下使用mitt","link":"#ts下使用mitt","children":[]},{"level":3,"title":"ts","slug":"ts","link":"#ts","children":[]}]},{"level":2,"title":"$refs 的使用","slug":"refs-的使用","link":"#refs-的使用","children":[]}],"git":{"createdTime":1693213043000,"updatedTime":1693215505000,"contributors":[{"name":"hanwu","email":"hanwu1314@outlook.com","commits":2}]},"readingTime":{"minutes":9.21,"words":2763},"filePathRelative":"frontEnd/vue3/阶段二/03插槽非父子通信.md","localizedDate":"2023年8月28日","excerpt":"<h2> 认识插槽Slot</h2>\\n<p>在开发中，我们会经常封装一个个可复用的组件：<br>\\n前面我们会<span style=\\"color:#00b0f0\\">通过props传递</span>给组件一些数据，让组件来进行展示；<br>\\n但是为了让这个组件具备<span style=\\"color:#00b0f0\\">更强的通用性</span>，我们<span style=\\"color:#00b0f0\\">不能将组件中的内容限制为固定的div、span</span>等等这些元素；<br>\\n比如某种情况下我们使用组件，希望组件显示的是一个按钮，某种情况下我们使用组件希望显示的是一张图片；<br>\\n我们应该让使用者<span style=\\"color:#00b0f0\\">可以决定某一块区域</span>到底存放什么内容和元素；</p>","copyright":{"author":"Mr.DanceCold"},"autoDesc":true}');export{e as data};
