const n=JSON.parse(`{"key":"v-2b302504","path":"/frontEnd/JavaScript/examination/base/day01.html","title":"day01","lang":"zh-CN","frontmatter":{"title":"day01","index":true,"order":1,"icon":"bijiben","category":"js","description":"问题 1、截取字符串abcdace的ace 2、数组的排序方法 答案 // ?t1:截取字符串abcdace的ace // 1.String.slice let str = \\"abcdace\\" let subString = 'ace' let result = '' let index = 0 index = str.indexOf(subString) result = str.slice(index) console.log(\\"🚀 ~ file: day01.js:9 ~ result:\\", result) // 2.正则 result = str.match(/ace/g).toString() console.log(\\"🚀 ~ file: day01.js:12 ~ result:\\", result) // 3.String.subString result = str.substring(index) console.log(\\"🚀 ~ file: day01.js:15 ~ result:\\", result) // ?t2:数组的排序方法 // 数组的排序方法有很多种，最简单的是使用Array的sort方法， 其次是一些常见的排序方法 // 其中冒泡、选择、插入适用于小规模数据，快排、归并适用于大规模数据 // 1.Array.sort let arr = [5, 1, 7, 8, 4, 2] result = arr.sort() console.log(\\"🚀 ~ file: day01.js:23 ~ result:\\", result) // 2.冒泡排序 O(n^2) function bubbleSort(arr) { if (arr.length &lt;= 1) { return arr; } let len = arr.length; for (let i = 0; i &lt; len; i++) { for (let j = 0; j &lt; len - i - 1; j++) { if (arr[j] &gt; arr[j + 1]) { let temp = arr[j]; arr[j] = arr[j + 1]; arr[j + 1] = temp; } } } return arr; } result = bubbleSort(arr) console.log(\\"🚀 ~ file: day01.js:44 ~ result:\\", result) // 3.选择排序 O(n^2) function selectionSort(arr) { if (arr.length &lt;= 1) { return arr; } let len = arr.length for (let i = 0; i &lt; len - 1; i++) { let minIndex = i for (let j = i + 1; j &lt; len; j++) { if (arr[i] &lt; arr[minIndex]) { minIndex = j } } if (minIndex !== i) { let temp = arr[i] arr[i] = arr[minIndex] arr[minIndex] = temp } } return arr } result = selectionSort(arr) console.log(\\"🚀 ~ file: day01.js:69 ~ result:\\", result) // 4.快速排序 O(n log n) function quickSort(arr) { if (arr.length &lt;= 1) { return arr; } let pivot = arr[Math.floor(arr.length / 2)] let less = [] let greater = [] let equal = [] let len = arr.length for (let i = 0; i &lt; len; i++) { if (arr[i] &lt; pivot) { less.push(arr[i]) } else if (arr[i] &gt; pivot) { greater.push(arr[i]) } else { equal.push(arr[i]) } } return quickSort(less).concat(equal, quickSort(greater)) } result = quickSort(arr) console.log(\\"🚀 ~ file: day01.js:92 ~ result:\\", result) // 4.插入排序 O(n^2) function insertionSort(arr) { if (arr.length &lt;= 1) { return arr; } let len = arr.length for (let i = 1; i &lt; len; i++) { let key = arr[i] let j = i - 1 while (j &gt;= 0 &amp;&amp; arr[j] &gt; key) { arr[j + 1] = arr[j] j-- } arr[j + 1] = key } return arr } result = insertionSort(arr) console.log(\\"🚀 ~ file: day01.js:113 ~ result:\\", result) 🚀 ~ file: day01.js:9 ~ result: ace 🚀 ~ file: day01.js:12 ~ result: ace 🚀 ~ file: day01.js:15 ~ result: ace 🚀 ~ file: day01.js:23 ~ result: [ 1, 2, 4, 5, 7, 8 ] 🚀 ~ file: day01.js:44 ~ result: [ 1, 2, 4, 5, 7, 8 ] 🚀 ~ file: day01.js:69 ~ result: [ 1, 2, 4, 5, 7, 8 ] 🚀 ~ file: day01.js:92 ~ result: [ 1, 2, 4, 5, 7, 8 ] 🚀 ~ file: day01.js:113 ~ result: [ 1, 2, 4, 5, 7, 8 ]","head":[["meta",{"property":"og:url","content":"https://ycyang.site/blog/frontEnd/JavaScript/examination/base/day01.html"}],["meta",{"property":"og:site_name","content":"寒舞知识宝库"}],["meta",{"property":"og:title","content":"day01"}],["meta",{"property":"og:description","content":"问题 1、截取字符串abcdace的ace 2、数组的排序方法 答案 // ?t1:截取字符串abcdace的ace // 1.String.slice let str = \\"abcdace\\" let subString = 'ace' let result = '' let index = 0 index = str.indexOf(subString) result = str.slice(index) console.log(\\"🚀 ~ file: day01.js:9 ~ result:\\", result) // 2.正则 result = str.match(/ace/g).toString() console.log(\\"🚀 ~ file: day01.js:12 ~ result:\\", result) // 3.String.subString result = str.substring(index) console.log(\\"🚀 ~ file: day01.js:15 ~ result:\\", result) // ?t2:数组的排序方法 // 数组的排序方法有很多种，最简单的是使用Array的sort方法， 其次是一些常见的排序方法 // 其中冒泡、选择、插入适用于小规模数据，快排、归并适用于大规模数据 // 1.Array.sort let arr = [5, 1, 7, 8, 4, 2] result = arr.sort() console.log(\\"🚀 ~ file: day01.js:23 ~ result:\\", result) // 2.冒泡排序 O(n^2) function bubbleSort(arr) { if (arr.length &lt;= 1) { return arr; } let len = arr.length; for (let i = 0; i &lt; len; i++) { for (let j = 0; j &lt; len - i - 1; j++) { if (arr[j] &gt; arr[j + 1]) { let temp = arr[j]; arr[j] = arr[j + 1]; arr[j + 1] = temp; } } } return arr; } result = bubbleSort(arr) console.log(\\"🚀 ~ file: day01.js:44 ~ result:\\", result) // 3.选择排序 O(n^2) function selectionSort(arr) { if (arr.length &lt;= 1) { return arr; } let len = arr.length for (let i = 0; i &lt; len - 1; i++) { let minIndex = i for (let j = i + 1; j &lt; len; j++) { if (arr[i] &lt; arr[minIndex]) { minIndex = j } } if (minIndex !== i) { let temp = arr[i] arr[i] = arr[minIndex] arr[minIndex] = temp } } return arr } result = selectionSort(arr) console.log(\\"🚀 ~ file: day01.js:69 ~ result:\\", result) // 4.快速排序 O(n log n) function quickSort(arr) { if (arr.length &lt;= 1) { return arr; } let pivot = arr[Math.floor(arr.length / 2)] let less = [] let greater = [] let equal = [] let len = arr.length for (let i = 0; i &lt; len; i++) { if (arr[i] &lt; pivot) { less.push(arr[i]) } else if (arr[i] &gt; pivot) { greater.push(arr[i]) } else { equal.push(arr[i]) } } return quickSort(less).concat(equal, quickSort(greater)) } result = quickSort(arr) console.log(\\"🚀 ~ file: day01.js:92 ~ result:\\", result) // 4.插入排序 O(n^2) function insertionSort(arr) { if (arr.length &lt;= 1) { return arr; } let len = arr.length for (let i = 1; i &lt; len; i++) { let key = arr[i] let j = i - 1 while (j &gt;= 0 &amp;&amp; arr[j] &gt; key) { arr[j + 1] = arr[j] j-- } arr[j + 1] = key } return arr } result = insertionSort(arr) console.log(\\"🚀 ~ file: day01.js:113 ~ result:\\", result) 🚀 ~ file: day01.js:9 ~ result: ace 🚀 ~ file: day01.js:12 ~ result: ace 🚀 ~ file: day01.js:15 ~ result: ace 🚀 ~ file: day01.js:23 ~ result: [ 1, 2, 4, 5, 7, 8 ] 🚀 ~ file: day01.js:44 ~ result: [ 1, 2, 4, 5, 7, 8 ] 🚀 ~ file: day01.js:69 ~ result: [ 1, 2, 4, 5, 7, 8 ] 🚀 ~ file: day01.js:92 ~ result: [ 1, 2, 4, 5, 7, 8 ] 🚀 ~ file: day01.js:113 ~ result: [ 1, 2, 4, 5, 7, 8 ]"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-22T11:41:48.000Z"}],["meta",{"property":"article:author","content":"Mr.DanceCold"}],["meta",{"property":"article:modified_time","content":"2023-08-22T11:41:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"day01\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-08-22T11:41:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.DanceCold\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1692704356000,"updatedTime":1692704508000,"contributors":[{"name":"hanwu","email":"hanwu1314@outlook.com","commits":2}]},"readingTime":{"minutes":1.76,"words":527},"filePathRelative":"frontEnd/JavaScript/examination/base/day01.md","localizedDate":"2023年8月22日","excerpt":"<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">问题</p>\\n<p>1、截取字符串abcdace的ace<br>\\n2、数组的排序方法</p>\\n</div>\\n<details class=\\"hint-container details\\"><summary>答案</summary>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token comment\\">// ?t1:截取字符串abcdace的ace</span>\\n<span class=\\"token comment\\">// 1.String.slice</span>\\n<span class=\\"token keyword\\">let</span> str <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"abcdace\\"</span>\\n<span class=\\"token keyword\\">let</span> subString <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'ace'</span>\\n<span class=\\"token keyword\\">let</span> result <span class=\\"token operator\\">=</span> <span class=\\"token string\\">''</span>\\n<span class=\\"token keyword\\">let</span> index <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span>\\nindex <span class=\\"token operator\\">=</span> str<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">indexOf</span><span class=\\"token punctuation\\">(</span>subString<span class=\\"token punctuation\\">)</span>\\nresult <span class=\\"token operator\\">=</span> str<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">slice</span><span class=\\"token punctuation\\">(</span>index<span class=\\"token punctuation\\">)</span>\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"🚀 ~ file: day01.js:9 ~ result:\\"</span><span class=\\"token punctuation\\">,</span> result<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">// 2.正则</span>\\nresult <span class=\\"token operator\\">=</span> str<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">match</span><span class=\\"token punctuation\\">(</span><span class=\\"token regex\\"><span class=\\"token regex-delimiter\\">/</span><span class=\\"token regex-source language-regex\\">ace</span><span class=\\"token regex-delimiter\\">/</span><span class=\\"token regex-flags\\">g</span></span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">toString</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"🚀 ~ file: day01.js:12 ~ result:\\"</span><span class=\\"token punctuation\\">,</span> result<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">// 3.String.subString</span>\\nresult <span class=\\"token operator\\">=</span> str<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">substring</span><span class=\\"token punctuation\\">(</span>index<span class=\\"token punctuation\\">)</span>\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"🚀 ~ file: day01.js:15 ~ result:\\"</span><span class=\\"token punctuation\\">,</span> result<span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\">// ?t2:数组的排序方法</span>\\n<span class=\\"token comment\\">// 数组的排序方法有很多种，最简单的是使用Array的sort方法， 其次是一些常见的排序方法</span>\\n<span class=\\"token comment\\">// 其中冒泡、选择、插入适用于小规模数据，快排、归并适用于大规模数据</span>\\n<span class=\\"token comment\\">// 1.Array.sort</span>\\n<span class=\\"token keyword\\">let</span> arr <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token number\\">5</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">7</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">8</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">4</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">]</span>\\nresult <span class=\\"token operator\\">=</span> arr<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">sort</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"🚀 ~ file: day01.js:23 ~ result:\\"</span><span class=\\"token punctuation\\">,</span> result<span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\">// 2.冒泡排序 O(n^2)</span>\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">bubbleSort</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">arr</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>arr<span class=\\"token punctuation\\">.</span>length <span class=\\"token operator\\">&lt;=</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> arr<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">let</span> len <span class=\\"token operator\\">=</span> arr<span class=\\"token punctuation\\">.</span>length<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">let</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> len<span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">let</span> j <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> j <span class=\\"token operator\\">&lt;</span> len <span class=\\"token operator\\">-</span> i <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span> j<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>arr<span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">&gt;</span> arr<span class=\\"token punctuation\\">[</span>j <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                <span class=\\"token keyword\\">let</span> temp <span class=\\"token operator\\">=</span> arr<span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n                arr<span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> arr<span class=\\"token punctuation\\">[</span>j <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n                arr<span class=\\"token punctuation\\">[</span>j <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> temp<span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">return</span> arr<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\nresult <span class=\\"token operator\\">=</span> <span class=\\"token function\\">bubbleSort</span><span class=\\"token punctuation\\">(</span>arr<span class=\\"token punctuation\\">)</span>\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"🚀 ~ file: day01.js:44 ~ result:\\"</span><span class=\\"token punctuation\\">,</span> result<span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\">// 3.选择排序 O(n^2)</span>\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">selectionSort</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">arr</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>arr<span class=\\"token punctuation\\">.</span>length <span class=\\"token operator\\">&lt;=</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> arr<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">let</span> len <span class=\\"token operator\\">=</span> arr<span class=\\"token punctuation\\">.</span>length\\n    <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">let</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> len <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">let</span> minIndex <span class=\\"token operator\\">=</span> i\\n        <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">let</span> j <span class=\\"token operator\\">=</span> i <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span> j <span class=\\"token operator\\">&lt;</span> len<span class=\\"token punctuation\\">;</span> j<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>arr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">&lt;</span> arr<span class=\\"token punctuation\\">[</span>minIndex<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                minIndex <span class=\\"token operator\\">=</span> j\\n            <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>minIndex <span class=\\"token operator\\">!==</span> i<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">let</span> temp <span class=\\"token operator\\">=</span> arr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span>\\n            arr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> arr<span class=\\"token punctuation\\">[</span>minIndex<span class=\\"token punctuation\\">]</span>\\n            arr<span class=\\"token punctuation\\">[</span>minIndex<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> temp\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">return</span> arr\\n<span class=\\"token punctuation\\">}</span>\\n\\nresult <span class=\\"token operator\\">=</span> <span class=\\"token function\\">selectionSort</span><span class=\\"token punctuation\\">(</span>arr<span class=\\"token punctuation\\">)</span>\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"🚀 ~ file: day01.js:69 ~ result:\\"</span><span class=\\"token punctuation\\">,</span> result<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">// 4.快速排序 O(n log n)</span>\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">quickSort</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">arr</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>arr<span class=\\"token punctuation\\">.</span>length <span class=\\"token operator\\">&lt;=</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> arr<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">let</span> pivot <span class=\\"token operator\\">=</span> arr<span class=\\"token punctuation\\">[</span>Math<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">floor</span><span class=\\"token punctuation\\">(</span>arr<span class=\\"token punctuation\\">.</span>length <span class=\\"token operator\\">/</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">]</span>\\n    <span class=\\"token keyword\\">let</span> less <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span>\\n    <span class=\\"token keyword\\">let</span> greater <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span>\\n    <span class=\\"token keyword\\">let</span> equal <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span>\\n    <span class=\\"token keyword\\">let</span> len <span class=\\"token operator\\">=</span> arr<span class=\\"token punctuation\\">.</span>length\\n    <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">let</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> len<span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>arr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">&lt;</span> pivot<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            less<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span>arr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>arr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">&gt;</span> pivot<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            greater<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span>arr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n            equal<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span>arr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token function\\">quickSort</span><span class=\\"token punctuation\\">(</span>less<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">concat</span><span class=\\"token punctuation\\">(</span>equal<span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">quickSort</span><span class=\\"token punctuation\\">(</span>greater<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\nresult <span class=\\"token operator\\">=</span> <span class=\\"token function\\">quickSort</span><span class=\\"token punctuation\\">(</span>arr<span class=\\"token punctuation\\">)</span>\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"🚀 ~ file: day01.js:92 ~ result:\\"</span><span class=\\"token punctuation\\">,</span> result<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">// 4.插入排序 O(n^2)</span>\\n\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">insertionSort</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">arr</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>arr<span class=\\"token punctuation\\">.</span>length <span class=\\"token operator\\">&lt;=</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> arr<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">let</span> len <span class=\\"token operator\\">=</span> arr<span class=\\"token punctuation\\">.</span>length\\n    <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">let</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> len<span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">let</span> key <span class=\\"token operator\\">=</span> arr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span>\\n        <span class=\\"token keyword\\">let</span> j <span class=\\"token operator\\">=</span> i <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span>\\n        <span class=\\"token keyword\\">while</span> <span class=\\"token punctuation\\">(</span>j <span class=\\"token operator\\">&gt;=</span> <span class=\\"token number\\">0</span> <span class=\\"token operator\\">&amp;&amp;</span> arr<span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">&gt;</span> key<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            arr<span class=\\"token punctuation\\">[</span>j <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> arr<span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span>\\n            j<span class=\\"token operator\\">--</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        arr<span class=\\"token punctuation\\">[</span>j <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> key\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">return</span> arr\\n<span class=\\"token punctuation\\">}</span>\\n\\nresult <span class=\\"token operator\\">=</span> <span class=\\"token function\\">insertionSort</span><span class=\\"token punctuation\\">(</span>arr<span class=\\"token punctuation\\">)</span>\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"🚀 ~ file: day01.js:113 ~ result:\\"</span><span class=\\"token punctuation\\">,</span> result<span class=\\"token punctuation\\">)</span>\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\"><pre class=\\"language-bash\\"><code>🚀 ~ file: day01.js:9 ~ result: ace\\n🚀 ~ file: day01.js:12 ~ result: ace\\n🚀 ~ file: day01.js:15 ~ result: ace\\n🚀 ~ file: day01.js:23 ~ result: <span class=\\"token punctuation\\">[</span> <span class=\\"token number\\">1</span>, <span class=\\"token number\\">2</span>, <span class=\\"token number\\">4</span>, <span class=\\"token number\\">5</span>, <span class=\\"token number\\">7</span>, <span class=\\"token number\\">8</span> <span class=\\"token punctuation\\">]</span> \\n🚀 ~ file: day01.js:44 ~ result: <span class=\\"token punctuation\\">[</span> <span class=\\"token number\\">1</span>, <span class=\\"token number\\">2</span>, <span class=\\"token number\\">4</span>, <span class=\\"token number\\">5</span>, <span class=\\"token number\\">7</span>, <span class=\\"token number\\">8</span> <span class=\\"token punctuation\\">]</span> \\n🚀 ~ file: day01.js:69 ~ result: <span class=\\"token punctuation\\">[</span> <span class=\\"token number\\">1</span>, <span class=\\"token number\\">2</span>, <span class=\\"token number\\">4</span>, <span class=\\"token number\\">5</span>, <span class=\\"token number\\">7</span>, <span class=\\"token number\\">8</span> <span class=\\"token punctuation\\">]</span> \\n🚀 ~ file: day01.js:92 ~ result: <span class=\\"token punctuation\\">[</span> <span class=\\"token number\\">1</span>, <span class=\\"token number\\">2</span>, <span class=\\"token number\\">4</span>, <span class=\\"token number\\">5</span>, <span class=\\"token number\\">7</span>, <span class=\\"token number\\">8</span> <span class=\\"token punctuation\\">]</span> \\n🚀 ~ file: day01.js:113 ~ result: <span class=\\"token punctuation\\">[</span> <span class=\\"token number\\">1</span>, <span class=\\"token number\\">2</span>, <span class=\\"token number\\">4</span>, <span class=\\"token number\\">5</span>, <span class=\\"token number\\">7</span>, <span class=\\"token number\\">8</span> <span class=\\"token punctuation\\">]</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></details>","copyright":{"author":"Mr.DanceCold"},"autoDesc":true}`);export{n as data};
