import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o as l,c,a,b as d,d as o,e as t}from"./app-7c537afb.js";const i={},p=t(`<h2 id="属性选择器" tabindex="-1"><a class="header-anchor" href="#属性选择器" aria-hidden="true">#</a> 属性选择器</h2><ul><li><p>拥有某一个属性 <code>[att]</code></p><ul><li><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">[title]</span><span class="token punctuation">{</span>
	<span class="token property">color</span><span class="token punctuation">:</span>red
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>属性等于某个值 <code>[att=val]</code></p><ul><li><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">[title=box]</span><span class="token punctuation">{</span>
	<span class="token property">color</span><span class="token punctuation">:</span>red
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>属性包含某一个val值 <code>[attr*=val]</code></p></li><li><p>属性以val值开头 <code>[attr^=val]</code></p></li><li><p>属性以val值结尾 <code>[attr$=val]</code></p></li><li><p>属性以val值开头 <code>[attr*=val]</code></p></li><li><p>属性值等于val或者以val开头后面紧跟连接符- <code>[attr|=val]</code></p></li><li><p>属性值包含val，如果有其他值必须以空格和val分割<code>[attr~=val]</code></p></li></ul><h2 id="后代选择器" tabindex="-1"><a class="header-anchor" href="#后代选择器" aria-hidden="true">#</a> 后代选择器</h2><ul><li><p>所有后代（直接/间接）</p><ul><li><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.box span</span><span class="token punctuation">{</span>
	<span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>直接子代选择器</p><ul><li><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.box &gt; span</span><span class="token punctuation">{</span>
	<span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul><h2 id="兄弟选择器" tabindex="-1"><a class="header-anchor" href="#兄弟选择器" aria-hidden="true">#</a> 兄弟选择器</h2><ul><li><p>相邻兄弟选择器<code>+</code></p><ul><li><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>one<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>hhh<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>bbbb<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.one + div</span> <span class="token punctuation">{</span>
	<span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>	
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>普通兄弟选择器<code>~</code></p><ul><li><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.one ~ div</span> <span class="token punctuation">{</span>
	<span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>	
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul><h2 id="选择器组" tabindex="-1"><a class="header-anchor" href="#选择器组" aria-hidden="true">#</a> 选择器组</h2><ul><li><p>交集选择器（需要同时符合两个选择器条件）</p><ul><li><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>one<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>aaa<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>bbbb<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>two<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>ccc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div.one</span><span class="token punctuation">{</span>
	<span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>	
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>并集选择器</p><ul><li><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>one<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>aaa<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>bbbb<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>two<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>ccc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.one,.two</span><span class="token punctuation">{</span>
	<span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>	
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul><h2 id="伪类选择器" tabindex="-1"><a class="header-anchor" href="#伪类选择器" aria-hidden="true">#</a> 伪类选择器</h2>`,9),r={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/Pseudo-classes",target:"_blank",rel:"noopener noreferrer"},u=t('<p><strong>伪类是选择器的一种，它用于选择处于特定状态的元素;</strong></p><h4 id="_1-动态伪类" tabindex="-1"><a class="header-anchor" href="#_1-动态伪类" aria-hidden="true">#</a> 1.动态伪类</h4><ul><li><code>:link</code> 未访问的链接</li><li><code>:visited</code> 已访问的链接</li><li><code>:hover</code> 鼠标挪动到链接上</li><li><code>:active</code> 激活的链接</li><li><code>:focus</code> 指当前拥有输入焦点的元素（能接收键盘输入） <ul><li>​ 因为链接a元素可以被键盘的Tab键选中聚焦，所以:focus也适用于a元素</li></ul></li></ul><div class="hint-container tip"><p class="hint-container-title">**使用注意**</p><ul><li><code>:hover</code>必须放在<code>:link</code>和<code>:visited</code>后面才能完全生效</li><li><code>:active</code>必须放在<code>:hover</code>后面才能完全生效</li><li>建议的编写顺序 <code>:link</code>、<code>:visited</code>、<code>:focus</code>、<code>:hover</code>、<code>:active</code></li></ul></div><h4 id="_2-目标伪类" tabindex="-1"><a class="header-anchor" href="#_2-目标伪类" aria-hidden="true">#</a> 2.目标伪类</h4><p><code>:target</code></p><h4 id="_3-语言伪类" tabindex="-1"><a class="header-anchor" href="#_3-语言伪类" aria-hidden="true">#</a> 3.语言伪类</h4><p><code>:lang( )</code></p><h4 id="_4-元素状态伪类" tabindex="-1"><a class="header-anchor" href="#_4-元素状态伪类" aria-hidden="true">#</a> 4.元素状态伪类</h4><p><code>:enabled</code>、<code>:disabled</code>、<code>:checked</code></p><h4 id="_5-结构伪类" tabindex="-1"><a class="header-anchor" href="#_5-结构伪类" aria-hidden="true">#</a> 5.结构伪类</h4><table><thead><tr><th style="text-align:center;">结构伪类</th><th style="text-align:left;">说明</th><th></th></tr></thead><tbody><tr><td style="text-align:center;"><code>:nth-child(1)</code></td><td style="text-align:left;">是父元素中的第1个子元素</td><td></td></tr><tr><td style="text-align:center;"><code>:nth-child(2n)</code></td><td style="text-align:left;">1.n代表任意正整数和0</td><td></td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">2.是父元素中的第偶数个子元素（第2、4、6、8......个）</td><td></td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">3.跟:nth-child(even)同义</td><td></td></tr><tr><td style="text-align:center;"><code>:nth-child(2n + 1)</code></td><td style="text-align:left;">1. n代表任意正整数和0</td><td></td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">2.是父元素中的第奇数个子元素（第1、3、5、7......个）</td><td></td></tr><tr><td style="text-align:center;"></td><td style="text-align:left;">3.跟<code>:nth-child(odd)</code>同义</td><td></td></tr><tr><td style="text-align:center;"><code>nth-child(-n + 2)</code></td><td style="text-align:left;">代表前2个子元素</td><td></td></tr><tr><td style="text-align:center;"><code>:nth-last-child(1)</code></td><td style="text-align:left;">代表倒数第一个子元素</td><td></td></tr><tr><td style="text-align:center;"><code>:nth-of-type( )</code> / <code>:nth-last-of-type()</code></td><td style="text-align:left;">用法跟:<code>nth-child()</code> / <code>:first-child</code>类似,但计算同种类型的元素</td><td></td></tr><tr><td style="text-align:center;"><code>:first-child</code></td><td style="text-align:left;">等同于<code>:nth-child(1)</code></td><td></td></tr><tr><td style="text-align:center;"><code>:last-child</code></td><td style="text-align:left;">等同于<code>:nth-last-child(1)</code></td><td></td></tr><tr><td style="text-align:center;"><code>:first-of-type</code></td><td style="text-align:left;">等同于<code>:nth-of-type(1)</code></td><td></td></tr><tr><td style="text-align:center;"><code>:last-of-type</code></td><td style="text-align:left;">等同于<code>:nth-last-of-type(1)</code></td><td></td></tr><tr><td style="text-align:center;"><code>:root</code></td><td style="text-align:left;">根元素，就是HTML元素</td><td></td></tr><tr><td style="text-align:center;"><code>:only-child</code></td><td style="text-align:left;">是父元素中唯一的子元素</td><td></td></tr><tr><td style="text-align:center;"><code>:only-of-type</code></td><td style="text-align:left;">是父元素中唯一的这种类型的子元素</td><td></td></tr><tr><td style="text-align:center;"><code>:empty</code></td><td style="text-align:left;">代表里面完全空白的元素</td><td></td></tr></tbody></table><h4 id="_6-否定伪类" tabindex="-1"><a class="header-anchor" href="#_6-否定伪类" aria-hidden="true">#</a> 6.否定伪类</h4><ul><li><code>:not(x)</code><ul><li>​ x是一个简单选择器</li><li>​ 表示除x以外的元素</li></ul></li></ul><h2 id="伪元素" tabindex="-1"><a class="header-anchor" href="#伪元素" aria-hidden="true">#</a> 伪元素</h2><p>常用的伪元素有<br><code>:first-line</code>、<code>::first-line</code> 可以针对首行文本设置属性<br><code>:first-letter</code>、<code>::first-letter</code> 可以针对首字母设置属性<br><code>:before</code>、<code>::before</code><br><code>:after</code>、<code>::after</code></p><p>为了区分伪元素和伪类，建议伪元素使用2个冒号，比如<code>::first-line</code></p><p><code>::before</code>和<code>::after</code>用来在一个元素的内容之前或之后插入其他内容（可以是文字、图片)，常通过 content 属性来为一个元素添加修饰性的内容</p>',18);function v(h,k){const n=e("ExternalLinkIcon");return l(),c("div",null,[p,a("p",null,[a("a",r,[d("伪类 - CSS：层叠样式表 | MDN (mozilla.org)"),o(n)])]),u])}const m=s(i,[["render",v],["__file","04CSS选择器.html.vue"]]);export{m as default};
