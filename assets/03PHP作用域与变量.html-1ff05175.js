import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as l,c as i,a as n,b as s,d as t,f as a}from"./app-207824d2.js";const c={},r=a(`<h2 id="作用域" tabindex="-1"><a class="header-anchor" href="#作用域" aria-hidden="true">#</a> 作用域</h2><p>php只有函数作用域,没有块作用, 函数之外全是全局作用域</p><h4 id="变量作用域" tabindex="-1"><a class="header-anchor" href="#变量作用域" aria-hidden="true">#</a> 变量作用域</h4><p>变量在全局的作用域包括了include和require引入的文件</p><p>echo 语句引用了一个局部未初始化的变量,导致没有任何输出</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>	<span class="token variable">$a</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">/* 全局作用域 */</span>
	
	<span class="token keyword">function</span> <span class="token function-definition function">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
	    <span class="token keyword">echo</span> <span class="token variable">$a</span><span class="token punctuation">;</span> <span class="token comment">/* 局部作用域  未初始化 */</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">echo</span> <span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&lt;br&gt;&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 可以读取到变量</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>函数中不能访问到外部的变量,这和js不一样<br> js中外部变量通过闭包方式出现在函数内部（作用域链）</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$name</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;张三&#39;</span><span class="token punctuation">;</span>
<span class="token comment">//</span>
 <span class="token variable">$hello</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span> <span class="token punctuation">{</span>
     <span class="token keyword">return</span> <span class="token string single-quoted-string">&#39;Hello , &#39;</span> <span class="token operator">.</span> <span class="token variable">$name</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">//</span>
<span class="token keyword">echo</span> <span class="token variable">$hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;&lt;hr&gt;&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="global关键字" tabindex="-1"><a class="header-anchor" href="#global关键字" aria-hidden="true">#</a> global关键字</h3><p>php在全局变量中必需声明<code>global</code>关键字</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>	<span class="token variable">$a</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
	<span class="token variable">$b</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
	<span class="token keyword">function</span> <span class="token function-definition function">Sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
	    <span class="token keyword">global</span> <span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token variable">$b</span><span class="token punctuation">;</span>
	    <span class="token variable">$b</span> <span class="token operator">=</span> <span class="token variable">$a</span> <span class="token operator">+</span> <span class="token variable">$b</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token function">Sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">echo</span> <span class="token variable">$b</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对于一个函数能够声明的全局变量的最大个数，PHP 没有限制</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$hello</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span> <span class="token punctuation">{</span>
    <span class="token comment">// 使用关键字 global引用一下外部变量</span>
    <span class="token keyword">global</span> <span class="token variable">$name</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token string single-quoted-string">&#39;Hello , &#39;</span> <span class="token operator">.</span> <span class="token variable">$name</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token variable">$hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;&lt;hr&gt;&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="use" tabindex="-1"><a class="header-anchor" href="#use" aria-hidden="true">#</a> use</h3><p><mark>不建议使用global，使用use</mark></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$name</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;张三&#39;</span><span class="token punctuation">;</span>
<span class="token variable">$hello</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">use</span> <span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string single-quoted-string">&#39;Hello , &#39;</span> <span class="token operator">.</span> <span class="token variable">$name</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token variable">$hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;&lt;hr&gt;&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="超全局变量-globals" tabindex="-1"><a class="header-anchor" href="#超全局变量-globals" aria-hidden="true">#</a> 超全局变量 $GLOBALS</h3><h4 id="globals数组" tabindex="-1"><a class="header-anchor" href="#globals数组" aria-hidden="true">#</a> $GLOBALS数组</h4>`,19),u={href:"https://www.php.net/manual/zh/reserved.variables.globals.php",target:"_blank",rel:"noopener noreferrer"},d=a(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>	<span class="token variable">$a</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  
	<span class="token variable">$b</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>  
	  
	<span class="token keyword">function</span> <span class="token function-definition function">Sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  
	<span class="token punctuation">{</span>  
	<span class="token variable">$GLOBALS</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;b&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$GLOBALS</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;a&#39;</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token variable">$GLOBALS</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;b&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  
	<span class="token punctuation">}</span>  
	  
	<span class="token function">Sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
	<span class="token keyword">echo</span> <span class="token variable">$b</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$name</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;张三&#39;</span><span class="token punctuation">;</span>
<span class="token variable">$hello</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string single-quoted-string">&#39;Hello , &#39;</span> <span class="token operator">.</span> <span class="token variable">$GLOBALS</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token variable">$hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;&lt;hr&gt;&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="超全局变量表" tabindex="-1"><a class="header-anchor" href="#超全局变量表" aria-hidden="true">#</a> 超全局变量表</h3>`,3),k={href:"https://www.php.net/manual/zh/language.variables.superglobals.php",target:"_blank",rel:"noopener noreferrer"},v=n("br",null,null,-1),b=n("code",null,"$GLOBALS",-1),h=n("br",null,null,-1),g=n("code",null,"$_SERVER",-1),m=n("br",null,null,-1),_=n("code",null,"$_GET",-1),f=n("br",null,null,-1),$=n("code",null,"$_POST",-1),w=n("br",null,null,-1),y=n("code",null,"$_FILES",-1),q=n("br",null,null,-1),x=n("code",null,"$_COOKIE",-1),S=n("br",null,null,-1),L=n("code",null,"$_SESSION",-1),P=n("br",null,null,-1),E=n("code",null,"$_REQUEST",-1),H=n("br",null,null,-1),O=n("code",null,"$_ENV",-1),T=a(`<p><strong>私有变量</strong> 会覆盖全局中的同名变量</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$hello</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span> <span class="token punctuation">{</span>  
<span class="token comment">// 私有变量 会覆盖全局中的同名变量  </span>
<span class="token variable">$name</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;李四&#39;</span><span class="token punctuation">;</span>  
<span class="token keyword">return</span> <span class="token string single-quoted-string">&#39;Hello , &#39;</span> <span class="token operator">.</span> <span class="token variable">$name</span><span class="token punctuation">;</span>  
<span class="token punctuation">}</span><span class="token punctuation">;</span>  
  
<span class="token keyword">echo</span> <span class="token variable">$hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;&lt;hr&gt;&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="常量" tabindex="-1"><a class="header-anchor" href="#常量" aria-hidden="true">#</a> 常量</h3><h4 id="两种声明方式" tabindex="-1"><a class="header-anchor" href="#两种声明方式" aria-hidden="true">#</a> 两种声明方式</h4><ul><li>define函数</li><li>const关键字</li></ul><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token function">define</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;USER_NAME&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;admin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// const, 与 js 是一样的, 用在类中</span>
<span class="token keyword">const</span> <span class="token constant">EMAIL</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;123456@qq.com&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>默认全局有效</p><div class="hint-container tip"><p class="hint-container-title">区别</p><p>define, 可以用在if中, 但不能用在class中<br> const, 编译阶段处理, 速度最快, 必须写到作用域的顶部,适合声明类常量,不能用在if中</p></div><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token function">define</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;php中文网&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// &#39;&#39;变量名, 是否合法?</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>合法</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>  <span class="token comment">// 使用 一个函数来获取</span>
  <span class="token keyword">echo</span> <span class="token function">constant</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;&lt;hr&gt;&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></div><h4 id="预定义常量" tabindex="-1"><a class="header-anchor" href="#预定义常量" aria-hidden="true">#</a> 预定义常量</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">echo</span> <span class="token string single-quoted-string">&#39;PHP版本: &#39;</span> <span class="token operator">.</span> <span class="token constant">PHP_VERSION</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;&lt;br&gt;&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span> <span class="token string single-quoted-string">&#39;操作系统: &#39;</span> <span class="token operator">.</span> <span class="token constant">PHP_OS</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;&lt;hr&gt;&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="魔术常量" tabindex="-1"><a class="header-anchor" href="#魔术常量" aria-hidden="true">#</a> 魔术常量</h4><div class="hint-container info"><p class="hint-container-title">常量的特征</p><ol><li>必须要有一个确定的值</li><li>不能更新<br> 魔术常量：总是有一个特定的值，但是用户不能更新，由系统来维护</li></ol></div><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">echo</span> <span class="token string single-quoted-string">&#39;当前行号 : &#39;</span> <span class="token operator">.</span> <span class="token constant">__LINE__</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;&lt;br&gt;&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span> <span class="token string single-quoted-string">&#39;当前文件 : &#39;</span> <span class="token operator">.</span> <span class="token constant">__FILE__</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;&lt;br&gt;&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span> <span class="token string single-quoted-string">&#39;当前文件路径 : &#39;</span> <span class="token operator">.</span> <span class="token constant">__DIR__</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;&lt;br&gt;&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="静态变量" tabindex="-1"><a class="header-anchor" href="#静态变量" aria-hidden="true">#</a> 静态变量</h2><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>	<span class="token keyword">static</span> <span class="token variable">$int</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// 正确  </span>
	<span class="token keyword">static</span> <span class="token variable">$int</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// 正确  </span>
	<span class="token keyword">static</span> <span class="token variable">$int</span> <span class="token operator">=</span> <span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token number">121</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 错误（因为它是函数）</span>
	
	<span class="token keyword">function</span> <span class="token function-definition function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
	    <span class="token keyword">static</span> <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	    <span class="token keyword">echo</span> <span class="token variable">$a</span><span class="token punctuation">;</span>
	    <span class="token variable">$a</span><span class="token operator">++</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17);function B(A,G){const e=o("ExternalLinkIcon");return l(),i("div",null,[r,n("p",null,[s("在全局范围内访问变量的第二个办法，是用特殊的 PHP 自定义 "),n("a",u,[s("$GLOBALS"),t(e)]),s(" 数组")]),d,n("p",null,[n("a",k,[s("PHP: 超全局变量 - Manual"),t(e)]),v,b,s(" 全局作用域中可用的全部变量"),h,g,s(" 服务器和执行环境信息"),m,_,s(" HTTP GET 变量"),f,$,s(" HTTP POST 变量"),w,y,s(" HTTP 文件上传变量"),q,x,s(" HTTP Cookies"),S,L,s(" Session变量"),P,E,s(" Request变量"),H,O,s(" 环境变量")]),T])}const R=p(c,[["render",B],["__file","03PHP作用域与变量.html.vue"]]);export{R as default};
