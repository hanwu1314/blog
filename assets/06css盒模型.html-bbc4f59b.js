import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as s,c as d,a as e,b as i,d as o,e as t}from"./app-319d961c.js";const n="/blog/assets/06-01-77c58594.webp",h="/blog/assets/06-02-0cd1fdee.webp",c="/blog/assets/06-03-3566ac6a.webp",p="/blog/assets/06-04-7f1a55bd.webp",b="/blog/assets/06-05-d3644c05.webp",u="/blog/assets/06-06-82c3760e.webp",g={},m=t('<p>HTML中的每一个元素都可以看做是一个盒子，如右下图所示，可以具备这4个属性</p><p><img src="'+n+'" alt="" loading="lazy"></p><h2 id="盒子模型" tabindex="-1"><a class="header-anchor" href="#盒子模型" aria-hidden="true">#</a> 盒子模型</h2><p>HTML中的每一个元素都<strong>可以看做是一个盒子</strong>，如右下图所示，可以具备这4个属性</p><p><img src="'+h+'" alt="" loading="lazy"></p><h2 id="内容宽度和高度" tabindex="-1"><a class="header-anchor" href="#内容宽度和高度" aria-hidden="true">#</a> 内容宽度和高度</h2><p>设置内容是通过宽度和高度设置的:</p><p>宽度设置: width<br> 高度设置: height<br> 注意: 对于<strong>行内级非替换元素</strong>来说, <strong>设置宽高是无效的</strong>!<br> 另外我们还可以设置如下属性:</p><ul><li><strong>min-width</strong>：最小宽度，无论内容多少，宽度都大于或等于min-width</li><li><strong>max-width</strong>：最大宽度，无论内容多少，宽度都小于或等于max-width</li></ul><p>移动端适配时, 可以设置最大宽度和最小宽度;</p><h2 id="边框" tabindex="-1"><a class="header-anchor" href="#边框" aria-hidden="true">#</a> 边框</h2><h3 id="边框宽度" tabindex="-1"><a class="header-anchor" href="#边框宽度" aria-hidden="true">#</a> 边框宽度</h3><p>border-top-width、border-right-width、border-bottom-width、border-left-width<br> border-width是上面4个属性的简写属性</p><h3 id="边框颜色" tabindex="-1"><a class="header-anchor" href="#边框颜色" aria-hidden="true">#</a> 边框颜色</h3><p>border-top-color、border-right-color、border-bottom-color、border-left-color<br> border-color是上面4个属性的简写属性</p><h3 id="边框样式" tabindex="-1"><a class="header-anchor" href="#边框样式" aria-hidden="true">#</a> 边框样式</h3><p>border-top-style、border-right-style、border-bottom-style、border-left-style<br> border-style是上面4个属性的简写属性</p><h3 id="边框的样式设置值" tabindex="-1"><a class="header-anchor" href="#边框的样式设置值" aria-hidden="true">#</a> 边框的样式设置值</h3><ul><li><p><code>groove</code>：凹槽, 沟槽, 边框看上去好象是雕刻在画布之内</p></li><li><p><code>ridge</code>：山脊, 和grove相反，边框看上去好象是从画布中凸出来</p></li></ul><p><img src="'+c+'" alt="" loading="lazy"></p><h3 id="圆角" tabindex="-1"><a class="header-anchor" href="#圆角" aria-hidden="true">#</a> 圆角</h3><p>border-radius常见的值:</p><ul><li>数值: 通常用来设置小的圆角, 比如6px;</li><li>百分比: 通常用来设置一定的弧度或者圆形;</li><li>如果一个元素是正方形, 设置border-radius大于或等于50%时，就会变成一个圆</li></ul><h2 id="上下margin的传递" tabindex="-1"><a class="header-anchor" href="#上下margin的传递" aria-hidden="true">#</a> 上下margin的传递</h2><ul><li><p>margin-top传递</p><ul><li>如果块级元素的顶部线和父元素的顶部线重叠，那么这个块级元素的margin-top值会传递给父元素</li></ul></li><li><p>margin-bottom传递</p><ul><li>如果块级元素的底部线和父元素的底部线重写，并且父元素的高度是auto，那么这个块级元素的margin-bottom值会传递给父元素</li></ul></li></ul><div class="hint-container info"><p class="hint-container-title">如何防止出现传递问题？</p><p>给父元素设置padding-top | padding-bottom<br> 给父元素设置border<br> 触发BFC: 设置overflow为auto</p></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>margin一般是用来设置兄弟元素之间的间距<br> padding一般是用来设置父子元素之间的间距</p></div><h2 id="outline" tabindex="-1"><a class="header-anchor" href="#outline" aria-hidden="true">#</a> outline</h2><p>outline表示元素的外轮廓<br> 不占用空间<br> 默认显示在border的外面</p><ul><li>outline相关属性有</li><li>outline-width: 外轮廓的宽度</li><li>outline-style：取值跟border的样式一样，比如solid、dotted等</li><li>outline-color: 外轮廓的颜色</li><li>outline：outline-width、outline-style、outline-color的简写属性，跟border用法类似应用实例</li><li>去除a元素、input元素的focus轮廓效果</li></ul><h2 id="盒子阴影-box-shadow" tabindex="-1"><a class="header-anchor" href="#盒子阴影-box-shadow" aria-hidden="true">#</a> 盒子阴影 box-shadow</h2><p>shadow的常见格式如下</p><ul><li>offset-x, 水平方向的偏移，正数往右偏移</li><li>offset-y, 垂直方向的偏移，正数往下偏移</li><li>blur-radius, 模糊半径</li><li>spread-radius, 延伸半径</li><li>color：阴影的颜色，如果没有设置，就跟随color属性的颜色</li><li>inset：外框阴影变成内框阴影</li></ul>',33),_={href:"https://html-css-js.com/css/generator/box-shadow/",target:"_blank",rel:"noopener noreferrer"},x=e("h2",{id:"文字阴影-text-shadow",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#文字阴影-text-shadow","aria-hidden":"true"},"#"),i(" 文字阴影 text-shadow")],-1),f=e("p",null,[i("text-shadow用法类似于box-shadow，用于给文字添加阴影效果"),e("br"),i(" 相当于box-shadow, 它没有spread-radius的值;")],-1),w={href:"https://html-css-js.com/css/generator/box-shadow/",target:"_blank",rel:"noopener noreferrer"},y=t('<p>行内非替换元素的注意事项</p><ul><li>以下属性<strong>对行内级非替换元素不起作用</strong><ul><li>width、height、margin-top、margin-bottom</li></ul></li><li>以下属性对行内级非替换元素的效果比较特殊 <ul><li>padding-top、padding-bottom、上下方向的border</li></ul></li></ul><h2 id="css属性-box-sizing" tabindex="-1"><a class="header-anchor" href="#css属性-box-sizing" aria-hidden="true">#</a> CSS属性 - box-sizing</h2><p>box-sizing(怪异盒子)用来设置盒子模型中宽高的行为</p><ul><li><p>content-box</p><ul><li>padding、border都布置在width、height外边</li></ul></li><li><p>border-box</p><ul><li>padding、border都布置在width、height里边</li></ul></li></ul><p><img src="'+p+'" alt="image-20230804183910739" loading="lazy"></p><p><img src="'+b+'" alt="image-20230804183924465" loading="lazy"></p><p><img src="'+u+'" alt="image-20230804183933799" loading="lazy"></p>',8);function v(z,k){const r=l("ExternalLinkIcon");return s(),d("div",null,[m,e("p",null,[e("a",_,[i("https://html-css-js.com/css/generator/box-shadow/"),o(r)])]),x,f,e("p",null,[e("a",w,[i("https://html-css-js.com/css/generator/box-shadow/"),o(r)])]),y])}const L=a(g,[["render",v],["__file","06css盒模型.html.vue"]]);export{L as default};
