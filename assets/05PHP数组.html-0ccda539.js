import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as t}from"./app-31fd6a8e.js";const p="/blog/assets/05-02-d5f08d74.webp",e="/blog/assets/05-01-7fd783cd.webp",o="/blog/assets/05-03-41daac50.webp",c="/blog/assets/05-04-030d4d3f.webp",l={},i=t(`<p>#php</p><h2 id="数组的遍历" tabindex="-1"><a class="header-anchor" href="#数组的遍历" aria-hidden="true">#</a> 数组的遍历</h2><h3 id="指针遍历" tabindex="-1"><a class="header-anchor" href="#指针遍历" aria-hidden="true">#</a> 指针遍历</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$stu</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;id&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Jack&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;course&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;php&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;score&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">90</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;[%s]=&gt;%s&lt;br&gt;&#39;</span><span class="token punctuation">,</span> <span class="token function">key</span><span class="token punctuation">(</span><span class="token variable">$stu</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">current</span><span class="token punctuation">(</span><span class="token variable">$stu</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [id]=&gt;1</span>
<span class="token function">next</span><span class="token punctuation">(</span><span class="token variable">$stu</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;[%s]=&gt;%s&lt;br&gt;&#39;</span><span class="token punctuation">,</span> <span class="token function">key</span><span class="token punctuation">(</span><span class="token variable">$stu</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">current</span><span class="token punctuation">(</span><span class="token variable">$stu</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [name]=&gt;Jack</span>
<span class="token function">next</span><span class="token punctuation">(</span><span class="token variable">$stu</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;[%s]=&gt;%s&lt;br&gt;&#39;</span><span class="token punctuation">,</span> <span class="token function">key</span><span class="token punctuation">(</span><span class="token variable">$stu</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">current</span><span class="token punctuation">(</span><span class="token variable">$stu</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//[course]=&gt;php</span>
<span class="token function">next</span><span class="token punctuation">(</span><span class="token variable">$stu</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;[%s]=&gt;%s&lt;br&gt;&#39;</span><span class="token punctuation">,</span> <span class="token function">key</span><span class="token punctuation">(</span><span class="token variable">$stu</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">current</span><span class="token punctuation">(</span><span class="token variable">$stu</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//[score]=&gt;90</span>
<span class="token comment">// 前移</span>
<span class="token function">prev</span><span class="token punctuation">(</span><span class="token variable">$stu</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;[%s]=&gt;%s&lt;br&gt;&#39;</span><span class="token punctuation">,</span> <span class="token function">key</span><span class="token punctuation">(</span><span class="token variable">$stu</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">current</span><span class="token punctuation">(</span><span class="token variable">$stu</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//[course]=&gt;php</span>
<span class="token comment">// 复位, 第一个</span>
<span class="token function">reset</span><span class="token punctuation">(</span><span class="token variable">$stu</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;[%s]=&gt;%s&lt;br&gt;&#39;</span><span class="token punctuation">,</span> <span class="token function">key</span><span class="token punctuation">(</span><span class="token variable">$stu</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">current</span><span class="token punctuation">(</span><span class="token variable">$stu</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//[id]=&gt;1</span>
<span class="token comment">// 最后</span>
<span class="token function">end</span><span class="token punctuation">(</span><span class="token variable">$stu</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;[%s]=&gt;%s&lt;br&gt;&#39;</span><span class="token punctuation">,</span> <span class="token function">key</span><span class="token punctuation">(</span><span class="token variable">$stu</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">current</span><span class="token punctuation">(</span><span class="token variable">$stu</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//[score]=&gt;90</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="自动遍历" tabindex="-1"><a class="header-anchor" href="#自动遍历" aria-hidden="true">#</a> 自动遍历</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$stu</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;[%s]=&gt;%s&lt;br&gt;&#39;</span><span class="token punctuation">,</span> <span class="token function">key</span><span class="token punctuation">(</span><span class="token variable">$stu</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">current</span><span class="token punctuation">(</span><span class="token variable">$stu</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token variable">$stu</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
         <span class="token keyword">else</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span>
 <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
     <span class="token keyword">echo</span> <span class="token string single-quoted-string">&#39;空数组&#39;</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="foreach遍历" tabindex="-1"><a class="header-anchor" href="#foreach遍历" aria-hidden="true">#</a> foreach遍历</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code> <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$stu</span> <span class="token keyword">as</span> <span class="token variable">$key</span> <span class="token operator">=&gt;</span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;[%s]=&gt;%s&lt;br&gt;&#39;</span><span class="token punctuation">,</span> <span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="解构遍历" tabindex="-1"><a class="header-anchor" href="#解构遍历" aria-hidden="true">#</a> 解构遍历</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">list</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">,</span>  <span class="token variable">$name</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Tony&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// list 不是函数，因为函数不能放在等号左边， 不能用在“左值” </span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;$id = %s, $name = %s&lt;br&gt;&#39;</span><span class="token punctuation">,</span> <span class="token variable">$id</span><span class="token punctuation">,</span> <span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="关联数组" tabindex="-1"><a class="header-anchor" href="#关联数组" aria-hidden="true">#</a> 关联数组</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">list</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;id&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$id</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$name</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;id&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Tony&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;$id = %s, $name = %s&lt;br&gt;&#39;</span><span class="token punctuation">,</span> <span class="token variable">$id</span><span class="token punctuation">,</span> <span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 解构通常用来遍历二维或以上的数组</span>
<span class="token variable">$users</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;id&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Tony&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;id&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;John&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;id&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Jerry&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// foreach</span>
<span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$users</span> <span class="token keyword">as</span> <span class="token keyword">list</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;id&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$id</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;$id = %s, $name = %s&lt;br&gt;&#39;</span><span class="token punctuation">,</span> <span class="token variable">$id</span><span class="token punctuation">,</span> <span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="数组函数" tabindex="-1"><a class="header-anchor" href="#数组函数" aria-hidden="true">#</a> 数组函数</h2><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$arr</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span> <span class="token operator">=&gt;</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">9</span> <span class="token operator">=&gt;</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">0</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;html&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;id&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;css&#39;</span><span class="token punctuation">,</span> <span class="token number">20</span> <span class="token operator">=&gt;</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
 <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;&lt;pre&gt;%s&lt;/pre&gt;&#39;</span><span class="token punctuation">,</span> <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// array_values —— 返回数组中所有的值</span>
 <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;&lt;pre&gt;%s&lt;/pre&gt;&#39;</span><span class="token punctuation">,</span> <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token function">array_values</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// in_array —— 检查数组中是否存在某个值</span>
 <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;html&#39;</span><span class="token punctuation">,</span> <span class="token variable">$arr</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+p+`" alt="img_1.png" loading="lazy"></p><h3 id="获取键" tabindex="-1"><a class="header-anchor" href="#获取键" aria-hidden="true">#</a> 获取键</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code> <span class="token variable">$key</span> <span class="token operator">=</span> <span class="token function">array_search</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;20&#39;</span><span class="token punctuation">,</span> <span class="token variable">$arr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="数组去重" tabindex="-1"><a class="header-anchor" href="#数组去重" aria-hidden="true">#</a> 数组去重</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code> <span class="token function">printf</span><span class="token punctuation">(</span>
     <span class="token string single-quoted-string">&#39;&lt;pre&gt;%s&lt;/pre&gt;&#39;</span><span class="token punctuation">,</span>
     <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token function">array_unique</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span>
 <span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>array_sum 数组求和<br> array_product 返回数组中所有乘积</p><h2 id="栈与队列" tabindex="-1"><a class="header-anchor" href="#栈与队列" aria-hidden="true">#</a> 栈与队列</h2><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$stack</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token function">array_push</span><span class="token punctuation">(</span><span class="token variable">$stack</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">array_push</span><span class="token punctuation">(</span><span class="token variable">$stack</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span> <span class="token function">array_pop</span><span class="token punctuation">(</span><span class="token variable">$stack</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 仅限头部增删</span>
<span class="token function">array_unshift</span><span class="token punctuation">(</span><span class="token variable">$stack</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span> <span class="token function">array_shift</span><span class="token punctuation">(</span><span class="token variable">$stack</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 2. 队： 尾部添加， 头部删除</span>
<span class="token variable">$queue</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// 入队</span>
<span class="token function">array_push</span><span class="token punctuation">(</span><span class="token variable">$queue</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span> <span class="token function">array_shift</span><span class="token punctuation">(</span><span class="token variable">$queue</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;&lt;pre&gt;%s&lt;/pre&gt;&#39;</span><span class="token punctuation">,</span> <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$queue</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="排序" tabindex="-1"><a class="header-anchor" href="#排序" aria-hidden="true">#</a> 排序</h2><h3 id="升序" tabindex="-1"><a class="header-anchor" href="#升序" aria-hidden="true">#</a> 升序</h3><p><code>sort($arr)</code><br><code>asort($arr)</code></p><h3 id="降序" tabindex="-1"><a class="header-anchor" href="#降序" aria-hidden="true">#</a> 降序</h3><p><code>rsort($arr);</code></p><h3 id="键" tabindex="-1"><a class="header-anchor" href="#键" aria-hidden="true">#</a> 键</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$arr</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;e&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;a&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;p&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// ksort($arr);</span>
<span class="token function">krsort</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;降序:&lt;pre&gt;%s&lt;/pre&gt;&#39;</span><span class="token punctuation">,</span> <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="打乱" tabindex="-1"><a class="header-anchor" href="#打乱" aria-hidden="true">#</a> 打乱</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$blue</span> <span class="token operator">=</span> <span class="token function">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1,2,3,4,5,6....... 16]</span>
<span class="token function">shuffle</span><span class="token punctuation">(</span><span class="token variable">$blue</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;&lt;pre&gt;%s&lt;/pre&gt;&#39;</span><span class="token punctuation">,</span> <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$blue</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="查询与替换" tabindex="-1"><a class="header-anchor" href="#查询与替换" aria-hidden="true">#</a> 查询与替换</h2><p><code>array_splice</code></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code> <span class="token variable">$stu</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;id&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;无忌&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;age&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;course&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;php&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;grade&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">80</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
 <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;&lt;pre&gt;%s&lt;/pre&gt;&#39;</span><span class="token punctuation">,</span> <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$stu</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 前2个</span>
 <span class="token variable">$res</span> <span class="token operator">=</span> <span class="token function">array_slice</span><span class="token punctuation">(</span><span class="token variable">$stu</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;&lt;pre&gt;%s&lt;/pre&gt;&#39;</span><span class="token punctuation">,</span> <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$res</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 后2个</span>
 <span class="token variable">$res</span> <span class="token operator">=</span> <span class="token function">array_slice</span><span class="token punctuation">(</span><span class="token variable">$stu</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token variable">$res</span> <span class="token operator">=</span> <span class="token function">array_slice</span><span class="token punctuation">(</span><span class="token variable">$stu</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;&lt;pre&gt;%s&lt;/pre&gt;&#39;</span><span class="token punctuation">,</span> <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$res</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除" tabindex="-1"><a class="header-anchor" href="#删除" aria-hidden="true">#</a> 删除</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code> <span class="token variable">$res</span> <span class="token operator">=</span> <span class="token function">array_splice</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;&lt;pre&gt;%s&lt;/pre&gt;&#39;</span><span class="token punctuation">,</span> <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$res</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;&lt;pre&gt;%s&lt;/pre&gt;&#39;</span><span class="token punctuation">,</span> <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+e+`" alt="img.png" loading="lazy"></p><h3 id="更新" tabindex="-1"><a class="header-anchor" href="#更新" aria-hidden="true">#</a> 更新</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 更新： 第2个位置删除2个，使用新的数据来替换掉它</span>
 <span class="token variable">$res</span> <span class="token operator">=</span> <span class="token function">array_splice</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;hello&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;world&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;&lt;pre&gt;%s&lt;/pre&gt;&#39;</span><span class="token punctuation">,</span> <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$res</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;&lt;pre&gt;%s&lt;/pre&gt;&#39;</span><span class="token punctuation">,</span> <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+o+`" alt="img_2.png" loading="lazy"></p><h3 id="添加" tabindex="-1"><a class="header-anchor" href="#添加" aria-hidden="true">#</a> 添加</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 添加: 第2个位置删除0个，传入的新数据会追加到当前位置的后面</span>
<span class="token variable">$res</span> <span class="token operator">=</span> <span class="token function">array_splice</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;hello&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;world&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;&lt;pre&gt;%s&lt;/pre&gt;&#39;</span><span class="token punctuation">,</span> <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$res</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;&lt;pre&gt;%s&lt;/pre&gt;&#39;</span><span class="token punctuation">,</span> <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="数组回调函数" tabindex="-1"><a class="header-anchor" href="#数组回调函数" aria-hidden="true">#</a> 数组回调函数</h2><h3 id="过滤器" tabindex="-1"><a class="header-anchor" href="#过滤器" aria-hidden="true">#</a> 过滤器</h3><p><code>array_filter</code> 使用回调函数过滤数组的元素</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$arr</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token number">150</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;php&#39;</span><span class="token punctuation">,</span>
    <span class="token constant boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token keyword">class</span>
    <span class="token punctuation">{</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token constant">null</span><span class="token punctuation">,</span>
    <span class="token constant boolean">false</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;0&#39;</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// 仅返回数组中可转为true的元素集合</span>
<span class="token variable">$res</span> <span class="token operator">=</span> <span class="token function">array_filter</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">is_scalar</span><span class="token punctuation">(</span><span class="token variable">$item</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 测试数据是否是一个标量</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;&lt;pre&gt;%s&lt;/pre&gt;&#39;</span><span class="token punctuation">,</span> <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$res</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//  Array</span>
<span class="token comment">//  (</span>
<span class="token comment">//      [0] =&gt; 150</span>
<span class="token comment">//      [1] =&gt; php</span>
<span class="token comment">//      [2] =&gt; 1</span>
<span class="token comment">//  )</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="map" tabindex="-1"><a class="header-anchor" href="#map" aria-hidden="true">#</a> map</h3><p><code>get_object_vars</code> 获取指定对象的属性</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$arr</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;php&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token keyword">class</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token variable">$name</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;电脑&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token variable">$price</span> <span class="token operator">=</span> <span class="token number">8888</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
 <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;&lt;pre&gt;%s&lt;/pre&gt;&#39;</span><span class="token punctuation">,</span> <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$res</span> <span class="token operator">=</span> <span class="token function">array_map</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token function">gettype</span><span class="token punctuation">(</span><span class="token variable">$item</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token string single-quoted-string">&#39;array&#39;</span><span class="token punctuation">:</span>
            <span class="token variable">$item</span> <span class="token operator">=</span> <span class="token function">join</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;, &#39;</span><span class="token punctuation">,</span> <span class="token variable">$item</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token string single-quoted-string">&#39;object&#39;</span><span class="token punctuation">:</span>
            <span class="token variable">$item</span> <span class="token operator">=</span>  <span class="token function">join</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;, &#39;</span><span class="token punctuation">,</span> <span class="token function">get_object_vars</span><span class="token punctuation">(</span><span class="token variable">$item</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token variable">$item</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token variable">$arr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;&lt;pre&gt;%s&lt;/pre&gt;&#39;</span><span class="token punctuation">,</span> <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$res</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+c+`" alt="img_3.png" loading="lazy"></p><h3 id="归并" tabindex="-1"><a class="header-anchor" href="#归并" aria-hidden="true">#</a> 归并</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$arr</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token variable">$res</span> <span class="token operator">=</span> <span class="token function">array_reduce</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$acc</span><span class="token punctuation">,</span> <span class="token variable">$cur</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token variable">$acc</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;, &#39;</span><span class="token punctuation">,</span> <span class="token variable">$cur</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&lt;br&gt;&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token variable">$acc</span> <span class="token operator">+</span> <span class="token variable">$cur</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token variable">$res</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;&lt;hr&gt;&#39;</span><span class="token punctuation">;</span>
<span class="token comment">//  0, 10  </span>
<span class="token comment">//  10, 20  </span>
<span class="token comment">//  30, 30  </span>
<span class="token comment">//  60, 40  </span>
<span class="token comment">//  100, 50  </span>
<span class="token comment">//  150</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="array-walk" tabindex="-1"><a class="header-anchor" href="#array-walk" aria-hidden="true">#</a> array_walk</h3><p>使用用户自定义函数对数组中的每个元素做回调处理</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$user</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;id&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;admin&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;email&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;admin@php.cn&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token function">array_walk</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">,</span> <span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token variable">$color</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;[%s]=&gt;&lt;span style=&quot;color:%s&quot;&gt;%s&lt;/span&gt;&#39;</span><span class="token punctuation">,</span> <span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token variable">$color</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;blue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,57),u=[i];function r(k,d){return s(),a("div",null,u)}const b=n(l,[["render",r],["__file","05PHP数组.html.vue"]]);export{b as default};
