import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as s,o as p,c as t,a as o,d as e,w as n,e as a,b as c}from"./app-b036b826.js";const i="/blog/assets/00-01-8b409e17.webp",f={},b=a('<p>维基百科对JavaSccript的定义：</p><ul><li>JavaScript 是一种<mark style="background:#FF5582A6;"><span style="color:#fff;">高级的、解释型</span></mark>的编程语言</li><li>JavaScript是<mark style="background:#FF5582A6;"><span style="color:#fff;">一门基于原型、头等函数</span></mark>的语言，是<mark style="background:#FF5582A6;"><span style="color:#ffffff;">一门多范式的语言</span></mark>，它<mark style="background:#FF5582A6;"><span style="color:#ffffff;">支持面向对象程序设计，指令式编程，以及函数式编程</span></mark></li></ul><blockquote><p>JavaScript是<span style="color:#00b0f0;">前端开发的灵魂</span></p></blockquote><h2 id="javascript的起源" tabindex="-1"><a class="header-anchor" href="#javascript的起源" aria-hidden="true">#</a> JavaScript的起源</h2><p>1994年，网景公司(Netscape)发布了Navigator浏览器0.9版</p><ul><li>这是历史上第一个比较成熟的网络浏览器，轰动一时</li><li>但是，这个版本的浏览器只能用来浏览，不具备与访问者互动的能力</li><li><span style="color:#00b0f0;">网景公司急需一种网页脚本语言，使得浏览器可以与网页互动</span></li></ul><p><mark style="background:#BBFABBA6;"><span style="color:#ffffff;">网景公司当时想要选择一种语言来嵌入到浏览器中</span></mark></p><ul><li><span style="color:#00b0f0;">采用现有的语言</span>，比如Perl、Python、Tcl、Scheme等等, 允许它们直接嵌入网页</li><li>1995年网景公司招募了<span style="color:#00b0f0;">程序员Brendan Eich</span>，希望将<span style="color:#00b0f0;">Scheme语言</span>作为网页脚本语言的可能性</li></ul><p><mark style="background:#BBFABBA6;"><span style="color:#ffffff;">就在这时，发生了另外一件大事：1995年Sun公司将Oak语言改名为Java，正式向市场推出</span></mark></p><ul><li>Java推出之后立马在市场上引起了轰动，Java当初有一个口号：“<span style="color:#00b0f0;">write once run anywhere</span>”</li><li>网景公司动了心，决定与<span style="color:#00b0f0;">Sun公司结成联盟</span>，希望<span style="color:#00b0f0;">将Java嵌入到网页</span>中来运行</li><li>Brendan Eich本人非常热衷于Scheme，但是管理层那个时候有点倾向于Java，希望可以简化Java来适应网页脚本的需求</li></ul><p><mark style="background:#BBFABBA6;"><span style="color:#fff;">但是Brendan Eich对此并不感兴趣，他用10天时间设计出来了JavaScript</span></mark></p><ul><li>最初这门语言的名字是<span style="color:#00b0f0;">Mocha</span>（摩卡）</li><li>在Navigator2.0 beta版本更名为<span style="color:#00b0f0;">LiveScript</span></li><li>在Navigator2.0 beta 3版本正式重命名为<span style="color:#00b0f0;">JavaScript</span>，当时是为了给这门语言搭上Java这个热词</li></ul><p><mark style="background:#BBFABBA6;"><span style="color:#ffffff;">当然10天设计出来语言足够说明Brendan Eich是天才，但是这门语言当时更像是一个多种语言的大杂烩</span></mark></p><ul><li>借鉴<span style="color:#00b0f0;">C</span>语言的基本语法</li><li>借鉴<span style="color:#00b0f0;">Java</span>语言的数据类型和内存管理</li><li>借鉴<span style="color:#00b0f0;">Scheme</span>语言，将函数提升到&quot;第一等公民&quot;（first class）的地位</li><li>借鉴<span style="color:#00b0f0;">Self</span>语言，使用基于原型（prototype）的继承机制</li></ul><p><mark style="background:#BBFABBA6;"><span style="color:#ffffff;">Brendan Eich曾经这样描述过JavaScript</span></mark></p><ul><li>与其说我爱Javascript，不如说我恨它，它是C语言和Self语言一夜情的产物</li><li>十八世纪英国文学家约翰逊博士说得好：&#39;<span style="color:#00b0f0;">它的优秀之处并非原创，它的原创之处并不优秀</span>。</li><li>（the part that is good is not original, and the part that is original is not good.）</li></ul><p><mark style="background:#FFF3A3A6;"><span style="color:#ffffff;">微软公司于1995年首次推出Internet Explorer，从而引发了与Netscape的浏览器大战</span></mark><br> 微软对Netscape Navigator解释器进行了逆向工程，创建了<span style="color:#00b0f0;">JScript</span>，以与处于市场领导地位的网景产品同台竞争；<br> 这个时候对于开发者来说是一场噩耗，因为需要针对不同的浏览器进行不同的适配；</p><p><mark style="background:#BBFABBA6;"><span style="color:#ffffff;">1996年11月，网景正式向ECMA（欧洲计算机制造商协会）提交语言标准</span></mark><br> 1997年6月，ECMA以<span style="color:#00b0f0;">JavaScript语言为基础</span>制定了<span style="color:#00b0f0;">ECMAScript标准规范ECMA-262</span>;<br> ECMA-262是一份标准，定义了<span style="color:#00b0f0;">ECMAScript</span>;<br><span style="color:#00b0f0;">JavaScript</span>成为了<span style="color:#00b0f0;">ECMAScript</span>最著名的实现之一;<br> 除此之外，<span style="color:#00b0f0;">ActionScript</span>和<span style="color:#00b0f0;">JScript</span>也都是ECMAScript规范的实现语言；</p><p><mark style="background:#FF5582A6;"><span style="color:#ffffff;">所以说，ECMAScript是一种规范，而JavaScript是这种规范的一种实现</span></mark></p><h2 id="javascript的组成" tabindex="-1"><a class="header-anchor" href="#javascript的组成" aria-hidden="true">#</a> JavaScript的组成</h2><p><mark style="background:#BBFABBA6;"><span style="color:#ffffff;">ECMAScript是JavaScript的标准，描述了该语言的语法和基本对象</span></mark></p><p>JavaScript是ECMAScript的语言层面的实现<br> 因为除了语言规范之外，<span style="color:#00b0f0;">JavaScript还需要对页面和浏览器进行各种操作</span><br> 除了基本实现之外，还包括<span style="color:#00b0f0;">DOM操作和BOM操作</span></p><p><img src="'+i+'" alt="" loading="lazy"></p><h2 id="javascript由谁来运行" tabindex="-1"><a class="header-anchor" href="#javascript由谁来运行" aria-hidden="true">#</a> JavaScript由谁来运行？</h2><p><mark style="background:#BBFABBA6;">我们经常会说：不同的浏览器由不同的内核组成</mark></p>',25),y=a('<p>事实上，我们经常说的浏览器内核指的就是浏览器的<span style="color:#00b0f0;">排版引擎</span></p><ul><li><span style="color:#00b0f0;">排版引擎</span>，也被称为<span style="color:#00b0f0;">浏览器引擎</span>、<span style="color:#00b0f0;">页面渲染引擎</span>或者<span style="color:#00b0f0;">样板引擎</span></li></ul><p>那么，JavaScript代码由谁来执行呢？</p><blockquote><p>JavaScript 引擎</p></blockquote><p><mark style="background:#BBFABBA6;">为什么需要JavaScript引擎？</mark></p><ul><li>高级的编程语言都是需要转成最终的机器指令来执行的</li><li>事实上我们编写的JavaScript无论你交给浏览器或者Node执行，最后都是需要被CPU执行的</li><li>但是CPU只认识自己的指令集，实际上是机器语言，才能被CPU所执行</li><li>所以我们需要<span style="color:#00b0f0;">JavaScript引擎</span>帮助我们将<span style="color:#00b0f0;">JavaScript代码</span>翻译成<span style="color:#00b0f0;">CPU指令</span>来执行</li></ul><h2 id="常见的js引擎" tabindex="-1"><a class="header-anchor" href="#常见的js引擎" aria-hidden="true">#</a> 常见的JS引擎</h2><p><mark style="background:#BBFABBA6;">比较常见的JavaScript引擎有哪些呢</mark></p><ul><li><span style="color:#00b0f0;">SpiderMonkey</span>：第一款JavaScript引擎，由Brendan Eich开发（也就是JavaScript作者）；</li><li><span style="color:#00b0f0;">Chakra</span>：微软开发，用于IT浏览器；</li><li><span style="color:#00b0f0;">JavaScriptCore</span>：WebKit中的JavaScript引擎，Apple公司开发；</li><li><span style="color:#00b0f0;">V8</span>：Google开发的强大JavaScript引擎，也帮助Chrome从众多浏览器中脱颖而出；</li></ul><h2 id="浏览器内核和js引擎的关系" tabindex="-1"><a class="header-anchor" href="#浏览器内核和js引擎的关系" aria-hidden="true">#</a> 浏览器内核和JS引擎的关系</h2><p><mark style="background:#BBFABBA6;">这里我们先以WebKit为例，WebKit事实上由两部分组成的</mark></p><ol><li><span style="color:#00b0f0;">WebCore</span>：负责HTML解析、布局、渲染等等相关的工作</li><li><span style="color:#00b0f0;">JavaScriptCore</span>：解析、执行JavaScript代码；</li></ol><p>小程序中也是这样划分的：在小程序中编写的JavaScript代码就是被JSCore执行的</p>',13);function d(k,u){const l=s("RouterLink");return p(),t("div",null,[b,o("p",null,[e(l,{to:"/frontEnd/html/02%E6%B5%8F%E8%A7%88%E5%99%A8%E5%86%85%E6%A0%B8.html"},{default:n(()=>[c("浏览器内核")]),_:1})]),y])}const v=r(f,[["render",d],["__file","01认识JavaScript.html.vue"]]);export{v as default};
