const e=JSON.parse('{"key":"v-060bf544","path":"/frontEnd/%E5%B0%8F%E7%A8%8B%E5%BA%8F/6%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%BB%84%E4%BB%B6%E5%8C%96.html","title":"小程序组件化","lang":"zh-CN","frontmatter":{"title":"小程序组件化","icon":"bijiben","category":"WXML","order":6,"description":"小程序框架 / 自定义组件 自定义组件的过程 自定义组件的步骤： 1.首先需要在 json 文件中进行自定义组件声明（将component 字段设为 true 可这一组文件设为自定义组件）： 2.在wxml中编写属于我们组件自己的模板 3.在wxss中编写属于我们组件自己的相关样式 4.在js文件中, 可以定义数据或组件内部的相关逻辑(后续我们再使用)","head":[["meta",{"property":"og:url","content":"https://ycyang.site/blog/frontEnd/%E5%B0%8F%E7%A8%8B%E5%BA%8F/6%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%BB%84%E4%BB%B6%E5%8C%96.html"}],["meta",{"property":"og:site_name","content":"寒舞知识宝库"}],["meta",{"property":"og:title","content":"小程序组件化"}],["meta",{"property":"og:description","content":"小程序框架 / 自定义组件 自定义组件的过程 自定义组件的步骤： 1.首先需要在 json 文件中进行自定义组件声明（将component 字段设为 true 可这一组文件设为自定义组件）： 2.在wxml中编写属于我们组件自己的模板 3.在wxss中编写属于我们组件自己的相关样式 4.在js文件中, 可以定义数据或组件内部的相关逻辑(后续我们再使用)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-21T04:51:46.000Z"}],["meta",{"property":"article:author","content":"Mr.DanceCold"}],["meta",{"property":"article:modified_time","content":"2023-09-21T04:51:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"小程序组件化\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-21T04:51:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.DanceCold\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"自定义组件的过程","slug":"自定义组件的过程","link":"#自定义组件的过程","children":[]},{"level":2,"title":"组件样式实现细节","slug":"组件样式实现细节","link":"#组件样式实现细节","children":[{"level":3,"title":"组件内的样式 对 外部样式 的影响","slug":"组件内的样式-对-外部样式-的影响","link":"#组件内的样式-对-外部样式-的影响","children":[]},{"level":3,"title":"外部样式 对 组件内样式 的影响","slug":"外部样式-对-组件内样式-的影响","link":"#外部样式-对-组件内样式-的影响","children":[]},{"level":3,"title":"如何让class可以相互影响","slug":"如何让class可以相互影响","link":"#如何让class可以相互影响","children":[]}]},{"level":2,"title":"组件使用过程通信","slug":"组件使用过程通信","link":"#组件使用过程通信","children":[{"level":3,"title":"像组件传递样式：  externalClasses","slug":"像组件传递样式-externalclasses","link":"#像组件传递样式-externalclasses","children":[]},{"level":3,"title":"组件向外传递事件","slug":"组件向外传递事件","link":"#组件向外传递事件","children":[]}]},{"level":2,"title":"页面直接调用组件","slug":"页面直接调用组件","link":"#页面直接调用组件","children":[]},{"level":2,"title":"组件插槽的使用","slug":"组件插槽的使用","link":"#组件插槽的使用","children":[{"level":3,"title":"基本使用","slug":"基本使用","link":"#基本使用","children":[]},{"level":3,"title":"behaviors","slug":"behaviors","link":"#behaviors","children":[]}]},{"level":2,"title":"组件的生命周期","slug":"组件的生命周期","link":"#组件的生命周期","children":[]}],"git":{"createdTime":1695271906000,"updatedTime":1695271906000,"contributors":[{"name":"hanwu","email":"hanwu1314@outlook.com","commits":1}]},"readingTime":{"minutes":5.47,"words":1641},"filePathRelative":"frontEnd/小程序/6小程序组件化.md","localizedDate":"2023年9月21日","excerpt":"<p><a href=\\"https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">小程序框架 / 自定义组件</a></p>\\n<h2> 自定义组件的过程</h2>\\n<p><strong>自定义组件的步骤：</strong><br>\\n1.首先需要在 json 文件中进行自定义组件声明（将component 字段设为 true 可这一组文件设为自定义组件）：<br>\\n2.在wxml中编写属于我们组件自己的模板<br>\\n3.在wxss中编写属于我们组件自己的相关样式<br>\\n4.在js文件中, 可以定义数据或组件内部的相关逻辑(后续我们再使用)</p>","copyright":{"author":"Mr.DanceCold"},"autoDesc":true}');export{e as data};
