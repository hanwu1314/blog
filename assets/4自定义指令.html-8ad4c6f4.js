const e=JSON.parse('{"key":"v-3c1c1da6","path":"/frontEnd/vue3/%E9%98%B6%E6%AE%B5%E4%B8%89/4%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4.html","title":"自定义指令","lang":"zh-CN","frontmatter":{"title":"自定义指令","icon":"bijiben","category":"vue","order":4,"description":"自定义指令 自定义指令 | Vue.js (vuejs.org) 注意：在 Vue 中，代码的复用和抽象主要还是通过组件； 通常在某些情况下，你需要对DOM 元素进行底层操作，这个时候就会用到自定义指令； 自定义指令分为两种： 自定义局部指令：组件中通过 directives 选项，只能在当前组件中使用； 自定义全局指令：app 的 directive 方法，可以在任意组件中被使用； 比如我们来做一个非常简单的案例：当某个元素挂载完成后可以自定获取焦点 实现方式一：如果我们使用默认的实现方式； 实现方式二：自定义一个 v-focus 的局部指令； 实现方式三：自定义一个 v-focus 的全局指令；","head":[["meta",{"property":"og:url","content":"https://ycyang.site/blog/frontEnd/vue3/%E9%98%B6%E6%AE%B5%E4%B8%89/4%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4.html"}],["meta",{"property":"og:site_name","content":"寒舞知识宝库"}],["meta",{"property":"og:title","content":"自定义指令"}],["meta",{"property":"og:description","content":"自定义指令 自定义指令 | Vue.js (vuejs.org) 注意：在 Vue 中，代码的复用和抽象主要还是通过组件； 通常在某些情况下，你需要对DOM 元素进行底层操作，这个时候就会用到自定义指令； 自定义指令分为两种： 自定义局部指令：组件中通过 directives 选项，只能在当前组件中使用； 自定义全局指令：app 的 directive 方法，可以在任意组件中被使用； 比如我们来做一个非常简单的案例：当某个元素挂载完成后可以自定获取焦点 实现方式一：如果我们使用默认的实现方式； 实现方式二：自定义一个 v-focus 的局部指令； 实现方式三：自定义一个 v-focus 的全局指令；"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-13T12:56:12.000Z"}],["meta",{"property":"article:author","content":"Mr.DanceCold"}],["meta",{"property":"article:modified_time","content":"2023-09-13T12:56:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"自定义指令\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-13T12:56:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.DanceCold\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"自定义指令","slug":"自定义指令","link":"#自定义指令","children":[{"level":3,"title":"实现方式一：聚焦的默认实现","slug":"实现方式一-聚焦的默认实现","link":"#实现方式一-聚焦的默认实现","children":[]},{"level":3,"title":"实现方式二：自定义全局指令","slug":"实现方式二-自定义全局指令","link":"#实现方式二-自定义全局指令","children":[]},{"level":3,"title":"实现方式三：局部自定义指令（很少使用）","slug":"实现方式三-局部自定义指令-很少使用","link":"#实现方式三-局部自定义指令-很少使用","children":[]},{"level":3,"title":"简化形式","slug":"简化形式","link":"#简化形式","children":[]},{"level":3,"title":"自定义组件的生命周期","slug":"自定义组件的生命周期","link":"#自定义组件的生命周期","children":[]},{"level":3,"title":"指令的参数和修饰符","slug":"指令的参数和修饰符","link":"#指令的参数和修饰符","children":[]}]}],"git":{"createdTime":1694609772000,"updatedTime":1694609772000,"contributors":[{"name":"hanwu","email":"hanwu1314@outlook.com","commits":1}]},"readingTime":{"minutes":4.79,"words":1438},"filePathRelative":"frontEnd/vue3/阶段三/4自定义指令.md","localizedDate":"2023年9月13日","excerpt":"<h2> 自定义指令</h2>\\n<p><a href=\\"https://cn.vuejs.org/guide/reusability/custom-directives.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">自定义指令 | Vue.js (vuejs.org)</a></p>\\n<ul>\\n<li>\\n<p>注意：在 Vue 中，代码的复用和抽象主要还是通过组件；</p>\\n</li>\\n<li>\\n<p>通常在某些情况下，你需要对<span style=\\"color:#00b0f0\\">DOM 元素进行底层操作</span>，这个时候就会用到自定义指令；</p>\\n<p><strong>自定义指令分为两种：</strong></p>\\n</li>\\n<li>\\n<p>自定义局部指令：组件中通过 <code>directives</code> 选项，只能在当前组件中使用；</p>\\n</li>\\n<li>\\n<p>自定义全局指令：app 的 <code>directive</code> 方法，可以在任意组件中被使用；</p>\\n<p><strong>比如我们来做一个非常简单的案例：当某个元素挂载完成后可以自定获取焦点</strong></p>\\n</li>\\n<li>\\n<p>实现方式一：如果我们使用默认的实现方式；</p>\\n</li>\\n<li>\\n<p>实现方式二：自定义一个 v-focus 的局部指令；</p>\\n</li>\\n<li>\\n<p>实现方式三：自定义一个 v-focus 的全局指令；</p>\\n</li>\\n</ul>","copyright":{"author":"Mr.DanceCold"},"autoDesc":true}');export{e as data};
