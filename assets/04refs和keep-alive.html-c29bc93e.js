const n=JSON.parse(`{"key":"v-645684b5","path":"/frontEnd/vue3/%E9%98%B6%E6%AE%B5%E4%BA%8C/04refs%E5%92%8Ckeep-alive.html","title":"refs和keep-alive","lang":"zh-CN","frontmatter":{"title":"refs和keep-alive","icon":"bijiben","category":"vue","order":4,"description":"动态组件 什么是动态组件 就是：让多个组件使用同一个挂载点，并动态切换，这就是动态组件。 在挂载点使用component标签，然后使用v-bind:is=”组件” &lt;template&gt; &lt;div class=\\"app\\"&gt; &lt;div class=\\"tabs\\"&gt; &lt;template v-for=\\"(item, index) in tabs\\" :key=\\"item\\"&gt; &lt;button :class=\\"{ active: currentTab === item }\\" @click=\\"itemClick(item)\\"&gt; {{ item }} &lt;/button&gt; &lt;/template&gt; &lt;/div&gt; &lt;div class=\\"view\\"&gt; &lt;!-- 1.第一种做法: v-if进行判断逻辑, 决定要显示哪一个组件 --&gt; &lt;!-- &lt;template v-if=\\"currentIndex === 0\\"&gt; &lt;home&gt;&lt;/home&gt; &lt;/template&gt; &lt;template v-else-if=\\"currentIndex === 1\\"&gt; &lt;about&gt;&lt;/about&gt; &lt;/template&gt; &lt;template v-else-if=\\"currentIndex === 2\\"&gt; &lt;category&gt;&lt;/category&gt; &lt;/template&gt; --&gt; &lt;!-- 2.第二种做法: 动态组件 component --&gt; &lt;!-- is中的组件需要来自两个地方: 1.全局注册的组件 2.局部注册的组件 --&gt; &lt;!-- &lt;component :is=\\"tabs[currentIndex]\\"&gt;&lt;/component&gt; --&gt; &lt;component name=\\"why\\" :age=\\"18\\" @homeClick=\\"homeClick\\" :is=\\"currentTab\\"&gt; &lt;/component&gt; &lt;/div&gt; &lt;/div&gt; &lt;/template&gt; &lt;script&gt; import Home from './views/Home.vue' import About from './views/About.vue' import Category from './views/Category.vue' export default { components: { Home, About, Category }, data() { return { tabs: [\\"home\\", \\"about\\", \\"category\\"], // currentIndex: 0 currentTab: \\"home\\" } }, methods: { itemClick(tab) { this.currentTab = tab }, homeClick(payload) { console.log(\\"homeClick:\\", payload) } } } &lt;/script&gt; &lt;style scoped&gt; .active { color: red; } &lt;/style&gt;","head":[["meta",{"property":"og:url","content":"https://ycyang.site/blog/frontEnd/vue3/%E9%98%B6%E6%AE%B5%E4%BA%8C/04refs%E5%92%8Ckeep-alive.html"}],["meta",{"property":"og:site_name","content":"寒舞知识宝库"}],["meta",{"property":"og:title","content":"refs和keep-alive"}],["meta",{"property":"og:description","content":"动态组件 什么是动态组件 就是：让多个组件使用同一个挂载点，并动态切换，这就是动态组件。 在挂载点使用component标签，然后使用v-bind:is=”组件” &lt;template&gt; &lt;div class=\\"app\\"&gt; &lt;div class=\\"tabs\\"&gt; &lt;template v-for=\\"(item, index) in tabs\\" :key=\\"item\\"&gt; &lt;button :class=\\"{ active: currentTab === item }\\" @click=\\"itemClick(item)\\"&gt; {{ item }} &lt;/button&gt; &lt;/template&gt; &lt;/div&gt; &lt;div class=\\"view\\"&gt; &lt;!-- 1.第一种做法: v-if进行判断逻辑, 决定要显示哪一个组件 --&gt; &lt;!-- &lt;template v-if=\\"currentIndex === 0\\"&gt; &lt;home&gt;&lt;/home&gt; &lt;/template&gt; &lt;template v-else-if=\\"currentIndex === 1\\"&gt; &lt;about&gt;&lt;/about&gt; &lt;/template&gt; &lt;template v-else-if=\\"currentIndex === 2\\"&gt; &lt;category&gt;&lt;/category&gt; &lt;/template&gt; --&gt; &lt;!-- 2.第二种做法: 动态组件 component --&gt; &lt;!-- is中的组件需要来自两个地方: 1.全局注册的组件 2.局部注册的组件 --&gt; &lt;!-- &lt;component :is=\\"tabs[currentIndex]\\"&gt;&lt;/component&gt; --&gt; &lt;component name=\\"why\\" :age=\\"18\\" @homeClick=\\"homeClick\\" :is=\\"currentTab\\"&gt; &lt;/component&gt; &lt;/div&gt; &lt;/div&gt; &lt;/template&gt; &lt;script&gt; import Home from './views/Home.vue' import About from './views/About.vue' import Category from './views/Category.vue' export default { components: { Home, About, Category }, data() { return { tabs: [\\"home\\", \\"about\\", \\"category\\"], // currentIndex: 0 currentTab: \\"home\\" } }, methods: { itemClick(tab) { this.currentTab = tab }, homeClick(payload) { console.log(\\"homeClick:\\", payload) } } } &lt;/script&gt; &lt;style scoped&gt; .active { color: red; } &lt;/style&gt;"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-28T09:38:25.000Z"}],["meta",{"property":"article:author","content":"Mr.DanceCold"}],["meta",{"property":"article:modified_time","content":"2023-08-28T09:38:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"refs和keep-alive\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-08-28T09:38:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.DanceCold\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"动态组件","slug":"动态组件","link":"#动态组件","children":[{"level":3,"title":"TS举例","slug":"ts举例","link":"#ts举例","children":[]}]},{"level":2,"title":"keep-alive","slug":"keep-alive","link":"#keep-alive","children":[{"level":3,"title":"指定缓存","slug":"指定缓存","link":"#指定缓存","children":[]},{"level":3,"title":"排除缓存","slug":"排除缓存","link":"#排除缓存","children":[]},{"level":3,"title":"指定缓存组件数量","slug":"指定缓存组件数量","link":"#指定缓存组件数量","children":[]},{"level":3,"title":"keep-alive生命周期","slug":"keep-alive生命周期","link":"#keep-alive生命周期","children":[]}]},{"level":2,"title":"⭐webpack代码分包","slug":"⭐webpack代码分包","link":"#⭐webpack代码分包","children":[]},{"level":2,"title":"异步组件","slug":"异步组件","link":"#异步组件","children":[{"level":3,"title":"suspense","slug":"suspense","link":"#suspense","children":[]}]},{"level":2,"title":"v-model","slug":"v-model","link":"#v-model","children":[{"level":3,"title":"对比vue2的变化","slug":"对比vue2的变化","link":"#对比vue2的变化","children":[]},{"level":3,"title":"v-model原理","slug":"v-model原理","link":"#v-model原理","children":[]},{"level":3,"title":"v-model绑定在组件上","slug":"v-model绑定在组件上","link":"#v-model绑定在组件上","children":[]},{"level":3,"title":"绑定多个v-model","slug":"绑定多个v-model","link":"#绑定多个v-model","children":[]},{"level":3,"title":"输入框值传给父组件","slug":"输入框值传给父组件","link":"#输入框值传给父组件","children":[]},{"level":3,"title":"v-model修饰符","slug":"v-model修饰符","link":"#v-model修饰符","children":[]},{"level":3,"title":"自定义v-model修饰符","slug":"自定义v-model修饰符","link":"#自定义v-model修饰符","children":[]}]},{"level":2,"title":"Mixin混入","slug":"mixin混入","link":"#mixin混入","children":[{"level":3,"title":"全局混入","slug":"全局混入","link":"#全局混入","children":[]}]}],"git":{"createdTime":1693213043000,"updatedTime":1693215505000,"contributors":[{"name":"hanwu","email":"hanwu1314@outlook.com","commits":2}]},"readingTime":{"minutes":9.47,"words":2842},"filePathRelative":"frontEnd/vue3/阶段二/04refs和keep-alive.md","localizedDate":"2023年8月28日","excerpt":"<h2> 动态组件</h2>\\n<p>什么是动态组件 就是：让多个组件使用同一个挂载点，并动态切换，这就是动态组件。</p>\\n<p>在挂载点使用<code>component</code>标签，然后使用<code>v-bind:is=”组件”</code></p>\\n<div class=\\"language-vue line-numbers-mode\\" data-ext=\\"vue\\"><pre class=\\"language-vue\\"><code><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>template</span><span class=\\"token punctuation\\">&gt;</span></span>\\n  <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>div</span> <span class=\\"token attr-name\\">class</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>app<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span>\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>div</span> <span class=\\"token attr-name\\">class</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>tabs<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span>\\n      <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>template</span> <span class=\\"token attr-name\\">v-for</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>(item, index) in tabs<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\">:key</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>item<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span>\\n        <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>button</span> <span class=\\"token attr-name\\">:class</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>{ active: currentTab === item }<span class=\\"token punctuation\\">\\"</span></span> \\n                <span class=\\"token attr-name\\">@click</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>itemClick(item)<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span>\\n          {{ item }}\\n        <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>button</span><span class=\\"token punctuation\\">&gt;</span></span>\\n      <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>template</span><span class=\\"token punctuation\\">&gt;</span></span>\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>div</span><span class=\\"token punctuation\\">&gt;</span></span>\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>div</span> <span class=\\"token attr-name\\">class</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>view<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span>\\n      <span class=\\"token comment\\">&lt;!-- 1.第一种做法: v-if进行判断逻辑, 决定要显示哪一个组件 --&gt;</span>\\n      <span class=\\"token comment\\">&lt;!-- &lt;template v-if=\\"currentIndex === 0\\"&gt;\\n        &lt;home&gt;&lt;/home&gt;\\n      &lt;/template&gt;\\n      &lt;template v-else-if=\\"currentIndex === 1\\"&gt;\\n        &lt;about&gt;&lt;/about&gt;\\n      &lt;/template&gt;\\n      &lt;template v-else-if=\\"currentIndex === 2\\"&gt;\\n        &lt;category&gt;&lt;/category&gt;\\n      &lt;/template&gt; --&gt;</span>\\n\\n      <span class=\\"token comment\\">&lt;!-- 2.第二种做法: 动态组件 component --&gt;</span>\\n      <span class=\\"token comment\\">&lt;!-- is中的组件需要来自两个地方: 1.全局注册的组件 2.局部注册的组件 --&gt;</span>\\n      <span class=\\"token comment\\">&lt;!-- &lt;component :is=\\"tabs[currentIndex]\\"&gt;&lt;/component&gt; --&gt;</span>\\n      <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>component</span> <span class=\\"token attr-name\\">name</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>why<span class=\\"token punctuation\\">\\"</span></span> \\n                 <span class=\\"token attr-name\\">:age</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>18<span class=\\"token punctuation\\">\\"</span></span>\\n                 <span class=\\"token attr-name\\">@homeClick</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>homeClick<span class=\\"token punctuation\\">\\"</span></span>\\n                 <span class=\\"token attr-name\\">:is</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>currentTab<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span>\\n      <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>component</span><span class=\\"token punctuation\\">&gt;</span></span>\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>div</span><span class=\\"token punctuation\\">&gt;</span></span>\\n  <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>div</span><span class=\\"token punctuation\\">&gt;</span></span>\\n<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>template</span><span class=\\"token punctuation\\">&gt;</span></span>\\n\\n<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>script</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token script\\"><span class=\\"token language-javascript\\">\\n  <span class=\\"token keyword\\">import</span> Home <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">'./views/Home.vue'</span>\\n  <span class=\\"token keyword\\">import</span> About <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">'./views/About.vue'</span>\\n  <span class=\\"token keyword\\">import</span> Category <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">'./views/Category.vue'</span>\\n\\n  <span class=\\"token keyword\\">export</span> <span class=\\"token keyword\\">default</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token literal-property property\\">components</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n      Home<span class=\\"token punctuation\\">,</span>\\n      About<span class=\\"token punctuation\\">,</span>\\n      Category\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token function\\">data</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token literal-property property\\">tabs</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span><span class=\\"token string\\">\\"home\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"about\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"category\\"</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>\\n        <span class=\\"token comment\\">// currentIndex: 0</span>\\n        <span class=\\"token literal-property property\\">currentTab</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"home\\"</span>\\n      <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token literal-property property\\">methods</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token function\\">itemClick</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">tab</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>currentTab <span class=\\"token operator\\">=</span> tab\\n      <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n      <span class=\\"token function\\">homeClick</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">payload</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"homeClick:\\"</span><span class=\\"token punctuation\\">,</span> payload<span class=\\"token punctuation\\">)</span>\\n      <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span>\\n</span></span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>script</span><span class=\\"token punctuation\\">&gt;</span></span>\\n\\n<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>style</span> <span class=\\"token attr-name\\">scoped</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token style\\"><span class=\\"token language-css\\">\\n  <span class=\\"token selector\\">.active</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token property\\">color</span><span class=\\"token punctuation\\">:</span> red<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n</span></span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>style</span><span class=\\"token punctuation\\">&gt;</span></span>\\n\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"Mr.DanceCold"},"autoDesc":true}`);export{n as data};
